.card, .noticia-listagem_card, .news-list-card, #coluna-lateral-noticias .lateral__mais-lidas, .portlet-card {
	position: relative;
	display: flex;
	flex-direction: column;
	min-width: 0;
	word-wrap: break-word;
	background-color: #fff;
	background-clip: border-box;
	border: 1px solid rgba(0, 0, 0, 0.125);
	border-radius: 0.25rem;
}

.card > hr, .noticia-listagem_card > hr, .news-list-card > hr, #coluna-lateral-noticias .lateral__mais-lidas > hr, .portlet-card > hr {
	margin-right: 0;
	margin-left: 0;
}

.card > .list-group, .noticia-listagem_card > .list-group, .news-list-card > .list-group, #coluna-lateral-noticias .lateral__mais-lidas > .list-group, .portlet-card > .list-group, .card > .portlet-list-group, .noticia-listagem_card > .portlet-list-group, .news-list-card > .portlet-list-group, #coluna-lateral-noticias .lateral__mais-lidas > .portlet-list-group, .portlet-card > .portlet-list-group {
	border-top: inherit;
	border-bottom: inherit;
}

.card > .list-group:first-child, .noticia-listagem_card > .list-group:first-child, .news-list-card > .list-group:first-child, #coluna-lateral-noticias .lateral__mais-lidas > .list-group:first-child, .portlet-card > .list-group:first-child, .card > .portlet-list-group:first-child, .noticia-listagem_card > .portlet-list-group:first-child, .news-list-card > .portlet-list-group:first-child, #coluna-lateral-noticias .lateral__mais-lidas > .portlet-list-group:first-child, .portlet-card > .portlet-list-group:first-child {
	border-top-width: 0;
	border-top-left-radius: calc(0.25rem - 1px);
	border-top-right-radius: calc(0.25rem - 1px);
}

.card > .list-group:last-child, .noticia-listagem_card > .list-group:last-child, .news-list-card > .list-group:last-child, #coluna-lateral-noticias .lateral__mais-lidas > .list-group:last-child, .portlet-card > .list-group:last-child, .card > .portlet-list-group:last-child, .noticia-listagem_card > .portlet-list-group:last-child, .news-list-card > .portlet-list-group:last-child, #coluna-lateral-noticias .lateral__mais-lidas > .portlet-list-group:last-child, .portlet-card > .portlet-list-group:last-child {
	border-bottom-width: 0;
	border-bottom-right-radius: calc(0.25rem - 1px);
	border-bottom-left-radius: calc(0.25rem - 1px);
}

.card-body, .news-list-content {
	flex: 1 1 auto;
	min-height: 1px;
	padding: 1.25rem;
}

.card-title {
	margin-bottom: 0.75rem;
}

.card-subtitle {
	margin-top: -0.375rem;
	margin-bottom: 0;
}

.card-text:last-child {
	margin-bottom: 0;
}

.card-link:hover {
	text-decoration: none;
}

.card-link + .card-link {
	margin-left: 1.25rem;
}

.card-header, #coluna-lateral-noticias .lateral__mais-lidas-header, .portlet-card-header {
	padding: 0.75rem 1.25rem;
	margin-bottom: 0;
	background-color: rgba(0, 0, 0, 0.03);
	border-bottom: 1px solid rgba(0, 0, 0, 0.125);
}

.card-header:first-child, #coluna-lateral-noticias .lateral__mais-lidas-header:first-child, .portlet-card-header:first-child {
	border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;
}

.card-header + .list-group .list-group-item:first-child, #coluna-lateral-noticias .lateral__mais-lidas-header + .list-group .list-group-item:first-child, .portlet-card-header + .list-group .list-group-item:first-child, .card-header + .portlet-list-group .list-group-item:first-child, #coluna-lateral-noticias .lateral__mais-lidas-header + .portlet-list-group .list-group-item:first-child, .portlet-card-header + .portlet-list-group .list-group-item:first-child, .card-header + .list-group .portlet-list-group-item:first-child, #coluna-lateral-noticias .lateral__mais-lidas-header + .list-group .portlet-list-group-item:first-child, .portlet-card-header + .list-group .portlet-list-group-item:first-child, .card-header + .portlet-list-group .portlet-list-group-item:first-child, #coluna-lateral-noticias .lateral__mais-lidas-header + .portlet-list-group .portlet-list-group-item:first-child, .portlet-card-header + .portlet-list-group .portlet-list-group-item:first-child {
	border-top: 0;
}

.card-footer {
	padding: 0.75rem 1.25rem;
	background-color: rgba(0, 0, 0, 0.03);
	border-top: 1px solid rgba(0, 0, 0, 0.125);
}

.card-footer:last-child {
	border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px);
}

.card-header-tabs {
	margin-right: -0.625rem;
	margin-bottom: -0.75rem;
	margin-left: -0.625rem;
	border-bottom: 0;
}

.card-header-pills {
	margin-right: -0.625rem;
	margin-left: -0.625rem;
}

.card-img-overlay {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	padding: 1.25rem;
}

.card-img, .noticia-listagem_card-img img, .news-list-media,
.card-img-top,
.card-img-bottom {
	flex-shrink: 0;
	width: 100%;
}

.card-img, .noticia-listagem_card-img img, .news-list-media,
.card-img-top {
	border-top-left-radius: calc(0.25rem - 1px);
	border-top-right-radius: calc(0.25rem - 1px);
}

.card-img, .noticia-listagem_card-img img, .news-list-media,
.card-img-bottom {
	border-bottom-right-radius: calc(0.25rem - 1px);
	border-bottom-left-radius: calc(0.25rem - 1px);
}

.card-deck .card, .card-deck .noticia-listagem_card, .card-deck .news-list-card, .card-deck #coluna-lateral-noticias .lateral__mais-lidas, #coluna-lateral-noticias .card-deck .lateral__mais-lidas, .card-deck .portlet-card {
	margin-bottom: 15px;
}

@media (min-width: 576px) {
	.card-deck {
		display: flex;
		flex-flow: row wrap;
		margin-right: -15px;
		margin-left: -15px;
	}
	.card-deck .card, .card-deck .noticia-listagem_card, .card-deck .news-list-card, .card-deck #coluna-lateral-noticias .lateral__mais-lidas, #coluna-lateral-noticias .card-deck .lateral__mais-lidas, .card-deck .portlet-card {
		flex: 1 0 0%;
		margin-right: 15px;
		margin-bottom: 0;
		margin-left: 15px;
	}
}

.card-group > .card, .card-group > .noticia-listagem_card, .card-group > .news-list-card, #coluna-lateral-noticias .card-group > .lateral__mais-lidas, .card-group > .portlet-card {
	margin-bottom: 15px;
}

@media (min-width: 576px) {
	.card-group {
		display: flex;
		flex-flow: row wrap;
	}
	.card-group > .card, .card-group > .noticia-listagem_card, .card-group > .news-list-card, #coluna-lateral-noticias .card-group > .lateral__mais-lidas, .card-group > .portlet-card {
		flex: 1 0 0%;
		margin-bottom: 0;
	}
	.card-group > .card + .card, .card-group > .noticia-listagem_card + .card, .card-group > .news-list-card + .card, #coluna-lateral-noticias .card-group > .lateral__mais-lidas + .card, .card-group > .portlet-card + .card, .card-group > .card + .noticia-listagem_card, .card-group > .noticia-listagem_card + .noticia-listagem_card, .card-group > .news-list-card + .noticia-listagem_card, #coluna-lateral-noticias .card-group > .lateral__mais-lidas + .noticia-listagem_card, .card-group > .portlet-card + .noticia-listagem_card, .card-group > .card + .news-list-card, .card-group > .noticia-listagem_card + .news-list-card, .card-group > .news-list-card + .news-list-card, #coluna-lateral-noticias .card-group > .lateral__mais-lidas + .news-list-card, .card-group > .portlet-card + .news-list-card, #coluna-lateral-noticias .card-group > .card + .lateral__mais-lidas, #coluna-lateral-noticias .card-group > .noticia-listagem_card + .lateral__mais-lidas, #coluna-lateral-noticias .card-group > .news-list-card + .lateral__mais-lidas, #coluna-lateral-noticias .card-group > .lateral__mais-lidas + .lateral__mais-lidas, #coluna-lateral-noticias .card-group > .portlet-card + .lateral__mais-lidas, .card-group > .card + .portlet-card, .card-group > .noticia-listagem_card + .portlet-card, .card-group > .news-list-card + .portlet-card, #coluna-lateral-noticias .card-group > .lateral__mais-lidas + .portlet-card, .card-group > .portlet-card + .portlet-card {
		margin-left: 0;
		border-left: 0;
	}
	.card-group > .card:not(:last-child), .card-group > .noticia-listagem_card:not(:last-child), .card-group > .news-list-card:not(:last-child), #coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:last-child), .card-group > .portlet-card:not(:last-child) {
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
	}
	.card-group > .card:not(:last-child) .card-img-top, .card-group > .noticia-listagem_card:not(:last-child) .card-img-top, .card-group > .news-list-card:not(:last-child) .card-img-top, #coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:last-child) .card-img-top, .card-group > .portlet-card:not(:last-child) .card-img-top,
	.card-group > .card:not(:last-child) .card-header,
	.card-group > .noticia-listagem_card:not(:last-child) .card-header,
	.card-group > .news-list-card:not(:last-child) .card-header,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:last-child) .card-header,
	.card-group > .portlet-card:not(:last-child) .card-header,
	.card-group > .card:not(:last-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .card:not(:last-child) .lateral__mais-lidas-header,
	.card-group > .noticia-listagem_card:not(:last-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .noticia-listagem_card:not(:last-child) .lateral__mais-lidas-header,
	.card-group > .news-list-card:not(:last-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .news-list-card:not(:last-child) .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:last-child) .lateral__mais-lidas-header,
	.card-group > .portlet-card:not(:last-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .portlet-card:not(:last-child) .lateral__mais-lidas-header,
	.card-group > .card:not(:last-child) .portlet-card-header,
	.card-group > .noticia-listagem_card:not(:last-child) .portlet-card-header,
	.card-group > .news-list-card:not(:last-child) .portlet-card-header,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:last-child) .portlet-card-header,
	.card-group > .portlet-card:not(:last-child) .portlet-card-header {
		border-top-right-radius: 0;
	}
	.card-group > .card:not(:last-child) .card-img-bottom, .card-group > .noticia-listagem_card:not(:last-child) .card-img-bottom, .card-group > .news-list-card:not(:last-child) .card-img-bottom, #coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:last-child) .card-img-bottom, .card-group > .portlet-card:not(:last-child) .card-img-bottom,
	.card-group > .card:not(:last-child) .card-footer,
	.card-group > .noticia-listagem_card:not(:last-child) .card-footer,
	.card-group > .news-list-card:not(:last-child) .card-footer,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:last-child) .card-footer,
	.card-group > .portlet-card:not(:last-child) .card-footer {
		border-bottom-right-radius: 0;
	}
	.card-group > .card:not(:first-child), .card-group > .noticia-listagem_card:not(:first-child), .card-group > .news-list-card:not(:first-child), #coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:first-child), .card-group > .portlet-card:not(:first-child) {
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
	}
	.card-group > .card:not(:first-child) .card-img-top, .card-group > .noticia-listagem_card:not(:first-child) .card-img-top, .card-group > .news-list-card:not(:first-child) .card-img-top, #coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:first-child) .card-img-top, .card-group > .portlet-card:not(:first-child) .card-img-top,
	.card-group > .card:not(:first-child) .card-header,
	.card-group > .noticia-listagem_card:not(:first-child) .card-header,
	.card-group > .news-list-card:not(:first-child) .card-header,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:first-child) .card-header,
	.card-group > .portlet-card:not(:first-child) .card-header,
	.card-group > .card:not(:first-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .card:not(:first-child) .lateral__mais-lidas-header,
	.card-group > .noticia-listagem_card:not(:first-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .noticia-listagem_card:not(:first-child) .lateral__mais-lidas-header,
	.card-group > .news-list-card:not(:first-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .news-list-card:not(:first-child) .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:first-child) .lateral__mais-lidas-header,
	.card-group > .portlet-card:not(:first-child) #coluna-lateral-noticias .lateral__mais-lidas-header,
	#coluna-lateral-noticias .card-group > .portlet-card:not(:first-child) .lateral__mais-lidas-header,
	.card-group > .card:not(:first-child) .portlet-card-header,
	.card-group > .noticia-listagem_card:not(:first-child) .portlet-card-header,
	.card-group > .news-list-card:not(:first-child) .portlet-card-header,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:first-child) .portlet-card-header,
	.card-group > .portlet-card:not(:first-child) .portlet-card-header {
		border-top-left-radius: 0;
	}
	.card-group > .card:not(:first-child) .card-img-bottom, .card-group > .noticia-listagem_card:not(:first-child) .card-img-bottom, .card-group > .news-list-card:not(:first-child) .card-img-bottom, #coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:first-child) .card-img-bottom, .card-group > .portlet-card:not(:first-child) .card-img-bottom,
	.card-group > .card:not(:first-child) .card-footer,
	.card-group > .noticia-listagem_card:not(:first-child) .card-footer,
	.card-group > .news-list-card:not(:first-child) .card-footer,
	#coluna-lateral-noticias .card-group > .lateral__mais-lidas:not(:first-child) .card-footer,
	.card-group > .portlet-card:not(:first-child) .card-footer {
		border-bottom-left-radius: 0;
	}
}

.card-columns .card, .card-columns .noticia-listagem_card, .card-columns .news-list-card, .card-columns #coluna-lateral-noticias .lateral__mais-lidas, #coluna-lateral-noticias .card-columns .lateral__mais-lidas, .card-columns .portlet-card {
	margin-bottom: 0.75rem;
}

@media (min-width: 576px) {
	.card-columns {
		column-count: 3;
		column-gap: 1.25rem;
		orphans: 1;
		widows: 1;
	}
	.card-columns .card, .card-columns .noticia-listagem_card, .card-columns .news-list-card, .card-columns #coluna-lateral-noticias .lateral__mais-lidas, #coluna-lateral-noticias .card-columns .lateral__mais-lidas, .card-columns .portlet-card {
		display: inline-block;
		width: 100%;
	}
}

.accordion > .card, .accordion > .noticia-listagem_card, .accordion > .news-list-card, #coluna-lateral-noticias .accordion > .lateral__mais-lidas, .accordion > .portlet-card {
	overflow: hidden;
}

.accordion > .card:not(:last-of-type), .accordion > .noticia-listagem_card:not(:last-of-type), .accordion > .news-list-card:not(:last-of-type), #coluna-lateral-noticias .accordion > .lateral__mais-lidas:not(:last-of-type), .accordion > .portlet-card:not(:last-of-type) {
	border-bottom: 0;
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
}

.accordion > .card:not(:first-of-type), .accordion > .noticia-listagem_card:not(:first-of-type), .accordion > .news-list-card:not(:first-of-type), #coluna-lateral-noticias .accordion > .lateral__mais-lidas:not(:first-of-type), .accordion > .portlet-card:not(:first-of-type) {
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}

.accordion > .card > .card-header, .accordion > .noticia-listagem_card > .card-header, .accordion > .news-list-card > .card-header, #coluna-lateral-noticias .accordion > .lateral__mais-lidas > .card-header, .accordion > .portlet-card > .card-header, #coluna-lateral-noticias .accordion > .card > .lateral__mais-lidas-header, #coluna-lateral-noticias .accordion > .noticia-listagem_card > .lateral__mais-lidas-header, #coluna-lateral-noticias .accordion > .news-list-card > .lateral__mais-lidas-header, #coluna-lateral-noticias .accordion > .lateral__mais-lidas > .lateral__mais-lidas-header, #coluna-lateral-noticias .accordion > .portlet-card > .lateral__mais-lidas-header, .accordion > .card > .portlet-card-header, .accordion > .noticia-listagem_card > .portlet-card-header, .accordion > .news-list-card > .portlet-card-header, #coluna-lateral-noticias .accordion > .lateral__mais-lidas > .portlet-card-header, .accordion > .portlet-card > .portlet-card-header {
	border-radius: 0;
	margin-bottom: -1px;
}

.list-group, .portlet-list-group {
	display: flex;
	flex-direction: column;
	padding-left: 0;
	margin-bottom: 0;
	border-radius: 0.25rem;
}

.list-group-item-action {
	width: 100%;
	color: #495057;
	text-align: inherit;
}

.list-group-item-action:hover, .list-group-item-action:focus {
	z-index: 1;
	color: #495057;
	text-decoration: none;
	background-color: #f8f9fa;
}

.list-group-item-action:active {
	color: #212529;
	background-color: #e9ecef;
}

.list-group-item, .portlet-list-group-item {
	position: relative;
	display: block;
	padding: 0.75rem 1.25rem;
	background-color: #fff;
	border: 1px solid rgba(0, 0, 0, 0.125);
}

.list-group-item:first-child, .portlet-list-group-item:first-child {
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}

.list-group-item:last-child, .portlet-list-group-item:last-child {
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: inherit;
}

.list-group-item.disabled, .disabled.portlet-list-group-item, .list-group-item:disabled, .portlet-list-group-item:disabled {
	color: #6c757d;
	pointer-events: none;
	background-color: #fff;
}

.list-group-item.active, .active.portlet-list-group-item {
	z-index: 2;
	color: #fff;
	background-color: #1b305a;
	border-color: #1b305a;
}

.list-group-item + .list-group-item, .portlet-list-group-item + .list-group-item, .list-group-item + .portlet-list-group-item, .portlet-list-group-item + .portlet-list-group-item {
	border-top-width: 0;
}

.list-group-item + .list-group-item.active, .portlet-list-group-item + .list-group-item.active, .list-group-item + .active.portlet-list-group-item, .portlet-list-group-item + .active.portlet-list-group-item {
	margin-top: -1px;
	border-top-width: 1px;
}

.list-group-horizontal {
	flex-direction: row;
}

.list-group-horizontal > .list-group-item:first-child, .list-group-horizontal > .portlet-list-group-item:first-child {
	border-bottom-left-radius: 0.25rem;
	border-top-right-radius: 0;
}

.list-group-horizontal > .list-group-item:last-child, .list-group-horizontal > .portlet-list-group-item:last-child {
	border-top-right-radius: 0.25rem;
	border-bottom-left-radius: 0;
}

.list-group-horizontal > .list-group-item.active, .list-group-horizontal > .active.portlet-list-group-item {
	margin-top: 0;
}

.list-group-horizontal > .list-group-item + .list-group-item, .list-group-horizontal > .portlet-list-group-item + .list-group-item, .list-group-horizontal > .list-group-item + .portlet-list-group-item, .list-group-horizontal > .portlet-list-group-item + .portlet-list-group-item {
	border-top-width: 1px;
	border-left-width: 0;
}

.list-group-horizontal > .list-group-item + .list-group-item.active, .list-group-horizontal > .portlet-list-group-item + .list-group-item.active, .list-group-horizontal > .list-group-item + .active.portlet-list-group-item, .list-group-horizontal > .portlet-list-group-item + .active.portlet-list-group-item {
	margin-left: -1px;
	border-left-width: 1px;
}

@media (min-width: 576px) {
	.list-group-horizontal-sm {
		flex-direction: row;
	}
	.list-group-horizontal-sm > .list-group-item:first-child, .list-group-horizontal-sm > .portlet-list-group-item:first-child {
		border-bottom-left-radius: 0.25rem;
		border-top-right-radius: 0;
	}
	.list-group-horizontal-sm > .list-group-item:last-child, .list-group-horizontal-sm > .portlet-list-group-item:last-child {
		border-top-right-radius: 0.25rem;
		border-bottom-left-radius: 0;
	}
	.list-group-horizontal-sm > .list-group-item.active, .list-group-horizontal-sm > .active.portlet-list-group-item {
		margin-top: 0;
	}
	.list-group-horizontal-sm > .list-group-item + .list-group-item, .list-group-horizontal-sm > .portlet-list-group-item + .list-group-item, .list-group-horizontal-sm > .list-group-item + .portlet-list-group-item, .list-group-horizontal-sm > .portlet-list-group-item + .portlet-list-group-item {
		border-top-width: 1px;
		border-left-width: 0;
	}
	.list-group-horizontal-sm > .list-group-item + .list-group-item.active, .list-group-horizontal-sm > .portlet-list-group-item + .list-group-item.active, .list-group-horizontal-sm > .list-group-item + .active.portlet-list-group-item, .list-group-horizontal-sm > .portlet-list-group-item + .active.portlet-list-group-item {
		margin-left: -1px;
		border-left-width: 1px;
	}
}

@media (min-width: 768px) {
	.list-group-horizontal-md {
		flex-direction: row;
	}
	.list-group-horizontal-md > .list-group-item:first-child, .list-group-horizontal-md > .portlet-list-group-item:first-child {
		border-bottom-left-radius: 0.25rem;
		border-top-right-radius: 0;
	}
	.list-group-horizontal-md > .list-group-item:last-child, .list-group-horizontal-md > .portlet-list-group-item:last-child {
		border-top-right-radius: 0.25rem;
		border-bottom-left-radius: 0;
	}
	.list-group-horizontal-md > .list-group-item.active, .list-group-horizontal-md > .active.portlet-list-group-item {
		margin-top: 0;
	}
	.list-group-horizontal-md > .list-group-item + .list-group-item, .list-group-horizontal-md > .portlet-list-group-item + .list-group-item, .list-group-horizontal-md > .list-group-item + .portlet-list-group-item, .list-group-horizontal-md > .portlet-list-group-item + .portlet-list-group-item {
		border-top-width: 1px;
		border-left-width: 0;
	}
	.list-group-horizontal-md > .list-group-item + .list-group-item.active, .list-group-horizontal-md > .portlet-list-group-item + .list-group-item.active, .list-group-horizontal-md > .list-group-item + .active.portlet-list-group-item, .list-group-horizontal-md > .portlet-list-group-item + .active.portlet-list-group-item {
		margin-left: -1px;
		border-left-width: 1px;
	}
}

@media (min-width: 992px) {
	.list-group-horizontal-lg {
		flex-direction: row;
	}
	.list-group-horizontal-lg > .list-group-item:first-child, .list-group-horizontal-lg > .portlet-list-group-item:first-child {
		border-bottom-left-radius: 0.25rem;
		border-top-right-radius: 0;
	}
	.list-group-horizontal-lg > .list-group-item:last-child, .list-group-horizontal-lg > .portlet-list-group-item:last-child {
		border-top-right-radius: 0.25rem;
		border-bottom-left-radius: 0;
	}
	.list-group-horizontal-lg > .list-group-item.active, .list-group-horizontal-lg > .active.portlet-list-group-item {
		margin-top: 0;
	}
	.list-group-horizontal-lg > .list-group-item + .list-group-item, .list-group-horizontal-lg > .portlet-list-group-item + .list-group-item, .list-group-horizontal-lg > .list-group-item + .portlet-list-group-item, .list-group-horizontal-lg > .portlet-list-group-item + .portlet-list-group-item {
		border-top-width: 1px;
		border-left-width: 0;
	}
	.list-group-horizontal-lg > .list-group-item + .list-group-item.active, .list-group-horizontal-lg > .portlet-list-group-item + .list-group-item.active, .list-group-horizontal-lg > .list-group-item + .active.portlet-list-group-item, .list-group-horizontal-lg > .portlet-list-group-item + .active.portlet-list-group-item {
		margin-left: -1px;
		border-left-width: 1px;
	}
}

@media (min-width: 1200px) {
	.list-group-horizontal-xl {
		flex-direction: row;
	}
	.list-group-horizontal-xl > .list-group-item:first-child, .list-group-horizontal-xl > .portlet-list-group-item:first-child {
		border-bottom-left-radius: 0.25rem;
		border-top-right-radius: 0;
	}
	.list-group-horizontal-xl > .list-group-item:last-child, .list-group-horizontal-xl > .portlet-list-group-item:last-child {
		border-top-right-radius: 0.25rem;
		border-bottom-left-radius: 0;
	}
	.list-group-horizontal-xl > .list-group-item.active, .list-group-horizontal-xl > .active.portlet-list-group-item {
		margin-top: 0;
	}
	.list-group-horizontal-xl > .list-group-item + .list-group-item, .list-group-horizontal-xl > .portlet-list-group-item + .list-group-item, .list-group-horizontal-xl > .list-group-item + .portlet-list-group-item, .list-group-horizontal-xl > .portlet-list-group-item + .portlet-list-group-item {
		border-top-width: 1px;
		border-left-width: 0;
	}
	.list-group-horizontal-xl > .list-group-item + .list-group-item.active, .list-group-horizontal-xl > .portlet-list-group-item + .list-group-item.active, .list-group-horizontal-xl > .list-group-item + .active.portlet-list-group-item, .list-group-horizontal-xl > .portlet-list-group-item + .active.portlet-list-group-item {
		margin-left: -1px;
		border-left-width: 1px;
	}
}

.list-group-flush, .portlet-list-group {
	border-radius: 0;
}

.list-group-flush > .list-group-item, .portlet-list-group > .list-group-item, .list-group-flush > .portlet-list-group-item, .portlet-list-group > .portlet-list-group-item {
	border-width: 0 0 1px;
}

.list-group-flush > .list-group-item:last-child, .portlet-list-group > .list-group-item:last-child, .list-group-flush > .portlet-list-group-item:last-child, .portlet-list-group > .portlet-list-group-item:last-child {
	border-bottom-width: 0;
}

.list-group-item-primary {
	color: #0e192f;
	background-color: #bfc5d1;
}

.list-group-item-primary.list-group-item-action:hover, .list-group-item-primary.list-group-item-action:focus {
	color: #0e192f;
	background-color: #b0b8c6;
}

.list-group-item-primary.list-group-item-action.active {
	color: #fff;
	background-color: #0e192f;
	border-color: #0e192f;
}

.list-group-item-secondary {
	color: #383d41;
	background-color: #d6d8db;
}

.list-group-item-secondary.list-group-item-action:hover, .list-group-item-secondary.list-group-item-action:focus {
	color: #383d41;
	background-color: #c8cbcf;
}

.list-group-item-secondary.list-group-item-action.active {
	color: #fff;
	background-color: #383d41;
	border-color: #383d41;
}

.list-group-item-success {
	color: #155724;
	background-color: #c3e6cb;
}

.list-group-item-success.list-group-item-action:hover, .list-group-item-success.list-group-item-action:focus {
	color: #155724;
	background-color: #b1dfbb;
}

.list-group-item-success.list-group-item-action.active {
	color: #fff;
	background-color: #155724;
	border-color: #155724;
}

.list-group-item-info {
	color: #256741;
	background-color: #cbefdb;
}

.list-group-item-info.list-group-item-action:hover, .list-group-item-info.list-group-item-action:focus {
	color: #256741;
	background-color: #b8e9ce;
}

.list-group-item-info.list-group-item-action.active {
	color: #fff;
	background-color: #256741;
	border-color: #256741;
}

.list-group-item-warning {
	color: #85712e;
	background-color: #fff5d1;
}

.list-group-item-warning.list-group-item-action:hover, .list-group-item-warning.list-group-item-action:focus {
	color: #85712e;
	background-color: #ffefb8;
}

.list-group-item-warning.list-group-item-action.active {
	color: #fff;
	background-color: #85712e;
	border-color: #85712e;
}

.list-group-item-danger {
	color: #810404;
	background-color: #fdbaba;
}

.list-group-item-danger.list-group-item-action:hover, .list-group-item-danger.list-group-item-action:focus {
	color: #810404;
	background-color: #fca1a1;
}

.list-group-item-danger.list-group-item-action.active {
	color: #fff;
	background-color: #810404;
	border-color: #810404;
}

.list-group-item-light {
	color: #787b7d;
	background-color: #f8fafb;
}

.list-group-item-light.list-group-item-action:hover, .list-group-item-light.list-group-item-action:focus {
	color: #787b7d;
	background-color: #e8eef2;
}

.list-group-item-light.list-group-item-action.active {
	color: #fff;
	background-color: #787b7d;
	border-color: #787b7d;
}

.list-group-item-dark {
	color: #161616;
	background-color: #c4c4c4;
}

.list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.list-group-item-action:focus {
	color: #161616;
	background-color: #b7b7b7;
}

.list-group-item-dark.list-group-item-action.active {
	color: #fff;
	background-color: #161616;
	border-color: #161616;
}

.list-group-item-azul {
	color: #0e192f;
	background-color: #bfc5d1;
}

.list-group-item-azul.list-group-item-action:hover, .list-group-item-azul.list-group-item-action:focus {
	color: #0e192f;
	background-color: #b0b8c6;
}

.list-group-item-azul.list-group-item-action.active {
	color: #fff;
	background-color: #0e192f;
	border-color: #0e192f;
}

.list-group-item-azul-claro {
	color: #253b68;
	background-color: #cbd7ef;
}

.list-group-item-azul-claro.list-group-item-action:hover, .list-group-item-azul-claro.list-group-item-action:focus {
	color: #253b68;
	background-color: #b8c8e9;
}

.list-group-item-azul-claro.list-group-item-action.active {
	color: #fff;
	background-color: #253b68;
	border-color: #253b68;
}

.list-group-item-secundary {
	color: #85712e;
	background-color: #fff5d1;
}

.list-group-item-secundary.list-group-item-action:hover, .list-group-item-secundary.list-group-item-action:focus {
	color: #85712e;
	background-color: #ffefb8;
}

.list-group-item-secundary.list-group-item-action.active {
	color: #fff;
	background-color: #85712e;
	border-color: #85712e;
}

.list-group-item-verde {
	color: #256741;
	background-color: #cbefdb;
}

.list-group-item-verde.list-group-item-action:hover, .list-group-item-verde.list-group-item-action:focus {
	color: #256741;
	background-color: #b8e9ce;
}

.list-group-item-verde.list-group-item-action.active {
	color: #fff;
	background-color: #256741;
	border-color: #256741;
}

.list-group-item-vermelho {
	color: #810404;
	background-color: #fdbaba;
}

.list-group-item-vermelho.list-group-item-action:hover, .list-group-item-vermelho.list-group-item-action:focus {
	color: #810404;
	background-color: #fca1a1;
}

.list-group-item-vermelho.list-group-item-action.active {
	color: #fff;
	background-color: #810404;
	border-color: #810404;
}

.list-group-item-roxo {
	color: #4a4772;
	background-color: #e0def5;
}

.list-group-item-roxo.list-group-item-action:hover, .list-group-item-roxo.list-group-item-action:focus {
	color: #4a4772;
	background-color: #cecaef;
}

.list-group-item-roxo.list-group-item-action.active {
	color: #fff;
	background-color: #4a4772;
	border-color: #4a4772;
}

.list-group-item-amarelo {
	color: #85712e;
	background-color: #fff5d1;
}

.list-group-item-amarelo.list-group-item-action:hover, .list-group-item-amarelo.list-group-item-action:focus {
	color: #85712e;
	background-color: #ffefb8;
}

.list-group-item-amarelo.list-group-item-action.active {
	color: #fff;
	background-color: #85712e;
	border-color: #85712e;
}

.list-group-item-amarelo-escuro {
	color: #7e6200;
	background-color: #fbecb8;
}

.list-group-item-amarelo-escuro.list-group-item-action:hover, .list-group-item-amarelo-escuro.list-group-item-action:focus {
	color: #7e6200;
	background-color: #fae6a0;
}

.list-group-item-amarelo-escuro.list-group-item-action.active {
	color: #fff;
	background-color: #7e6200;
	border-color: #7e6200;
}

.list-group-item-cinza {
	color: #383838;
	background-color: #d6d6d6;
}

.list-group-item-cinza.list-group-item-action:hover, .list-group-item-cinza.list-group-item-action:focus {
	color: #383838;
	background-color: #c9c9c9;
}

.list-group-item-cinza.list-group-item-action.active {
	color: #fff;
	background-color: #383838;
	border-color: #383838;
}

.list-group-item-cinza-azulado {
	color: #787b7d;
	background-color: #f8fafb;
}

.list-group-item-cinza-azulado.list-group-item-action:hover, .list-group-item-cinza-azulado.list-group-item-action:focus {
	color: #787b7d;
	background-color: #e8eef2;
}

.list-group-item-cinza-azulado.list-group-item-action.active {
	color: #fff;
	background-color: #787b7d;
	border-color: #787b7d;
}

.list-group-item-cinza-claro {
	color: #7a7a7a;
	background-color: #f9f9f9;
}

.list-group-item-cinza-claro.list-group-item-action:hover, .list-group-item-cinza-claro.list-group-item-action:focus {
	color: #7a7a7a;
	background-color: #ececec;
}

.list-group-item-cinza-claro.list-group-item-action.active {
	color: #fff;
	background-color: #7a7a7a;
	border-color: #7a7a7a;
}

.list-group-item-branco {
	color: #858585;
	background-color: white;
}

.list-group-item-branco.list-group-item-action:hover, .list-group-item-branco.list-group-item-action:focus {
	color: #858585;
	background-color: #f2f2f2;
}

.list-group-item-branco.list-group-item-action.active {
	color: #fff;
	background-color: #858585;
	border-color: #858585;
}

.list-group-item-instagram {
	color: #772131;
	background-color: #f7cad2;
}

.list-group-item-instagram.list-group-item-action:hover, .list-group-item-instagram.list-group-item-action:focus {
	color: #772131;
	background-color: #f4b4bf;
}

.list-group-item-instagram.list-group-item-action.active {
	color: #fff;
	background-color: #772131;
	border-color: #772131;
}

.list-group-item-youtube {
	color: #6b1110;
	background-color: #f1c1c0;
}

.list-group-item-youtube.list-group-item-action:hover, .list-group-item-youtube.list-group-item-action:focus {
	color: #6b1110;
	background-color: #ecacab;
}

.list-group-item-youtube.list-group-item-action.active {
	color: #fff;
	background-color: #6b1110;
	border-color: #6b1110;
}

.list-group-item-facebook {
	color: #1f2e50;
	background-color: #c8d1e2;
}

.list-group-item-facebook.list-group-item-action:hover, .list-group-item-facebook.list-group-item-action:focus {
	color: #1f2e50;
	background-color: #b7c3d9;
}

.list-group-item-facebook.list-group-item-action.active {
	color: #fff;
	background-color: #1f2e50;
	border-color: #1f2e50;
}

.imprensa__conteudo {
	background-color: #fff;
	padding-bottom: 28px;
}

.imprensa__conteudo .titulo {
	padding-top: 15px;
	padding-left: 15px;
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	line-height: 3rem;
	color: #1b305a;
	font-weight: 700;
	font-size: 2.5rem;
}

.noticia-listagem_destaque {
	display: flex;
	flex-wrap: wrap;
	margin-right: 0;
	margin-left: 0;
}

.noticia-listagem_card {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	border: none;
	position: relative;
	flex: 0 0 100%;
	max-width: 100%;
}

@media (min-width: 992px) {
	.noticia-listagem_card {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

.noticia-listagem_card-img {
	margin: 0;
	position: relative;
	overflow: hidden;
	border-radius: 5px;
}

.noticia-listagem_card-img::after {
	content: '';
	background: transparent linear-gradient(180deg, #00000000 0%, #000000 100%) 0% 0% no-repeat padding-box;
	width: 100%;
	height: 50%;
	position: absolute;
	top: 50%;
	left: 0;
}

.noticia-listagem_card-img::after:hover {
	top: 100%;
}

.noticia-listagem_card-img img {
	transform: scale(1);
	transition: 0.3s ease-in-out;
}

.noticia-listagem_card-img img:hover {
	transform: scale(1.2);
}

.noticia-listagem_card-img-overlay {
	position: absolute;
	right: 0;
	bottom: 0;
	left: 0;
	padding: 0 28px;
	transition: transform 0.3s;
}

.noticia-listagem_card-img-overlay:hover {
	transition: transform 0.2s;
}

.noticia-listagem_badge {
	text-transform: uppercase;
	margin-bottom: 5px;
	z-index: 2;
}

.noticia-listagem_title {
	margin-top: 10px;
}

.noticia-listagem_title a {
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	line-height: 3rem;
	color: #ffffff;
	font-weight: 700;
	line-height: 1.5;
	font-size: 1.75rem;
}

.noticia-listagem_description {
	color: #fff;
	font-size: 1rem;
	font-family: "Open Sans";
	display: none;
	transition: ease-out 2s;
}

.noticia-listagem_description.exibir {
	transition: ease-in 2s;
	display: block;
}

.news-list-card {
	border: 0;
	border-radius: 0;
	width: 100%;
	padding-bottom: 15px;
	padding-top: 15px;
	border-bottom: 1px solid #BDBDBD;
}

.news-list-card:last-child {
	border-bottom: none;
}

.news-list-row {
	display: flex;
	flex-wrap: wrap;
	margin-right: 0;
	margin-left: 0;
	padding-top: 5px;
	padding-bottom: 5px;
	align-items: center;
}

@media (min-width: 992px) {
	.news-list-col-4 {
		flex: 0 0 33.33333%;
		max-width: 33.33333%;
		position: relative;
	}
}

.news-list-col-8 {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	padding-left: 0;
	padding-right: 0;
}

@media (min-width: 992px) {
	.news-list-col-8 {
		flex: 0 0 66.66667%;
		max-width: 66.66667%;
	}
}

.news-list-col-12 {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	padding-left: 0;
	padding-right: 0;
}

@media (min-width: 992px) {
	.news-list-col-12 {
		flex: 0 0 100%;
		max-width: 100%;
		padding-top: 15px;
	}
}

.news-list-media {
	margin: 0;
}

.news-list-img {
	border-radius: 5px;
}

.news-list-content {
	padding-top: 0;
	padding-bottom: 0;
}

.news-list-badge.news-list-badge__limited {
	position: absolute;
	bottom: 20px;
	left: 10px;
	z-index: 2;
	padding-left: 0;
	padding-right: 0;
}

.news-list-badge.news-list-badge__limited span {
	transition: ease-in-out 2s;
	display: none;
}

.news-list-badge.news-list-badge__limited:hover span {
	transition: ease-in-out 2s;
	display: inline-block;
}

.news-list-badge.news-list-badge__expanded {
	top: 0;
}

.news-list-title {
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	line-height: 3rem;
	color: #1b305a;
	font-weight: 700;
	font-size: 1.25rem;
	line-height: 1.5;
}

.news-list-description {
	margin-bottom: 5px;
	font-size: 1rem;
	font-family: "Open Sans";
	line-height: 1.5;
	color: #6B6B6B;
}

.news-list-footer {
	display: flex;
	align-items: center;
}

.news-list-footer .time {
	font-size: 0.75rem;
	color: #BDBDBD;
}

.news-list-footer .sharing {
	border: 0;
	display: flex;
	margin-left: 15px;
	background-color: rgba(107, 107, 107, 0.2);
	width: 20px;
	height: 20px;
	border-radius: 50%;
	padding: 4px;
}

.news-list-footer .sharing:hover {
	cursor: pointer;
}

#coluna-lateral-noticias .portletWrapper {
	padding-left: 15px;
	padding-right: 15px;
	background-color: #fff;
	padding-bottom: 15px;
}

#coluna-lateral-noticias .lateral {
	padding-left: 15px;
	padding-right: 15px;
	padding-top: 15px;
}

#coluna-lateral-noticias .lateral__mais-lidas {
	border-color: #BDBDBD;
	border-radius: 5px;
	padding: 0 15px;
}

#coluna-lateral-noticias .lateral__mais-lidas-header {
	background-color: #fff;
	border-bottom: none;
}

#coluna-lateral-noticias .lateral__mais-lidas-title {
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	line-height: 3rem;
	color: #1b305a;
	font-weight: 700;
	font-size: 1.5rem;
	font-weight: bold;
	line-height: 1.5;
	margin-bottom: 0;
	padding-bottom: 0;
	display: flex;
	align-items: center;
}

#coluna-lateral-noticias .lateral__mais-lidas-title::before {
	content: "";
	width: 12px;
	height: 12px;
	background: #47C77D;
	margin-right: 8px;
}

#coluna-lateral-noticias .lateral__mais-lidas-item {
	display: flex;
	flex-direction: column;
	justify-items: center;
	padding-top: 5px;
	padding-bottom: 5px;
}

#coluna-lateral-noticias .lateral__mais-lidas-item:last-child {
	border-top: 0;
}

#coluna-lateral-noticias .lateral__mais-lidas-item .item-carousel {
	display: flex;
	align-items: center;
	border-top: 1px solid #BDBDBD;
	flex-direction: row;
	padding-top: 10px;
	padding-bottom: 10px;
	min-height: 100px;
}

#coluna-lateral-noticias .lateral__mais-lidas-item .item-carousel .item-count {
	padding-right: 15px;
}

#coluna-lateral-noticias .lateral__mais-lidas-item .item-carousel .item-count span {
	width: 32px;
	height: 32px;
	border-radius: 50%;
	background-color: rgba(71, 199, 125, 0.2);
	color: #47c77d;
	display: flex;
	justify-content: center;
	align-items: center;
}

#coluna-lateral-noticias .lateral__mais-lidas-item p {
	margin-bottom: 0;
}

#coluna-lateral-noticias .lateral__mais-lidas-item p a {
	font-size: 1.125rem;
	color: #1b305a;
}

#coluna-lateral-noticias .lateral__mais-lidas-item p a:hover {
	text-decoration: none;
}

#coluna-lateral-noticias .lateral__mais-lidas > .owl-theme .owl-dots .owl-dot:hover span,
#coluna-lateral-noticias .lateral__mais-lidas > .owl-theme .owl-dots .owl-dot.active span {
	background-color: #47c77d;
}

.portlet-card {
	padding: 0 15px;
}

.portlet-card-header {
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	line-height: 3rem;
	color: #1b305a;
	font-weight: 700;
	padding: 0;
	font-size: 1.5rem;
	background-color: #fff;
	border-bottom-width: 3px;
	border-bottom-style: solid;
}

.portlet-card-header_amarelo {
	border-bottom-color: #FFDE57;
}

.portlet-card-header_verde {
	border-bottom-color: #47C77D;
}

.portlet-card-header_azul {
	border-bottom-color: #5ADBFF;
}

.portlet-list-group-item a {
	color: #1b305a;
	font-size: 1.125rem;
}

.portlet-card-footer {
	text-align: center;
	padding-top: 5px;
	padding-bottom: 5px;
}

.portlet-card-footer a {
	font-size: 1.125rem;
	font-weight: bold;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
