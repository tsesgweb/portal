@keyframes spinner-border {
	to {
		transform: rotate(360deg);
	}
}

.spinner-border {
	display: inline-block;
	width: 2rem;
	height: 2rem;
	vertical-align: text-bottom;
	border: 0.25em solid currentColor;
	border-right-color: transparent;
	border-radius: 50%;
	animation: spinner-border .75s linear infinite;
}

.spinner-border-sm {
	width: 1rem;
	height: 1rem;
	border-width: 0.2em;
}

@keyframes spinner-grow {
	0% {
		transform: scale(0);
	}
	50% {
		opacity: 1;
		transform: none;
	}
}

.spinner-grow {
	display: inline-block;
	width: 2rem;
	height: 2rem;
	vertical-align: text-bottom;
	background-color: currentColor;
	border-radius: 50%;
	opacity: 0;
	animation: spinner-grow .75s linear infinite;
}

.spinner-grow-sm {
	width: 1rem;
	height: 1rem;
}

#home-destaques a,
#home-servicos a,
#noticias a,
.consultas a,
.mapa-site-conteudo a,
.servicos-mais-acessados a {
	color: #6c757d;
}

#home-destaques a:hover,
#home-servicos a:hover,
#noticias a:hover,
.consultas a:hover,
.mapa-site-conteudo a:hover,
.servicos-mais-acessados a:hover {
	color: #494f54;
}

#home-destaques label,
#home-servicos label,
#noticias label,
.consultas label,
.mapa-site-conteudo label,
.servicos-mais-acessados label {
	font-weight: normal;
}

#home-destaques .active a,
#home-servicos .active a,
#noticias .active a,
.consultas .active a,
.mapa-site-conteudo .active a,
.servicos-mais-acessados .active a {
	font-weight: normal;
	color: #8d8d8d;
}

[class^="home-"] .titulo-padrao,
[id^="home-"] .titulo-padrao {
	font-size: 0.25rem;
}

.conteudo-principal {
	padding-bottom: 24px;
}

#resposta-situacao-eleitoral .btn,
#resposta-local-votacao .btn {
	float: right;
}

#home-consultas {
	background-color: white;
	border-top: #ffda59 solid 1px;
	border-bottom: #d1d1d1 solid 1px;
	padding-top: 24px;
	padding-bottom: 24px;
	padding-top: 30px;
}

@media (min-width: 992px) {
	#home-consultas :placeholder,
	#home-consultas .form-control {
		font-size: 13px;
	}
}

.consulta-processos-fisicos {
	flex: 0 0 100%;
	max-width: 100%;
	padding-left: 0;
	padding-right: 0;
	padding-top: 10px;
}

@media (min-width: 992px) {
	.consulta-processos-fisicos {
		padding-left: 9px;
		min-height: 200px;
	}
}

@media (min-width: 576px) {
	.consulta-processos-fisicos {
		padding-right: 6px;
		flex: 0 0 66.66667%;
		max-width: 66.66667%;
	}
}

@media (min-width: 768px) {
	.consulta-processos-fisicos {
		padding-right: 6px;
		flex: 0 0 83.33333%;
		max-width: 83.33333%;
	}
}

@media (min-width: 992px) {
	.consulta-processos-fisicos {
		padding-right: 6px;
		flex: 0 0 41.66667%;
		max-width: 41.66667%;
	}
}

.consulta-jurisprudencia {
	flex: 0 0 100%;
	max-width: 100%;
	padding-top: 10px;
	padding-left: 0;
	padding-right: 0;
}

@media (min-width: 576px) {
	.consulta-jurisprudencia {
		flex: 0 0 50%;
		max-width: 50%;
		padding-right: 10px;
		margin-bottom: 10px;
	}
}

@media (min-width: 768px) {
	.consulta-jurisprudencia {
		flex: 0 0 50%;
		max-width: 50%;
		padding-right: 6px;
	}
}

@media (min-width: 992px) {
	.consulta-jurisprudencia {
		flex: 0 0 16.66667%;
		max-width: 16.66667%;
		padding-left: 0;
	}
}

.consulta-legislacao-compilada {
	flex: 0 0 100%;
	max-width: 100%;
	padding-left: 0;
	padding-right: 0;
}

@media (min-width: 576px) {
	.consulta-legislacao-compilada {
		flex: 0 0 50%;
		max-width: 50%;
		padding-right: 6px;
		margin-bottom: 10px;
	}
}

@media (min-width: 768px) {
	.consulta-legislacao-compilada {
		flex: 0 0 50%;
		max-width: 50%;
		padding-right: 6px;
	}
}

@media (min-width: 992px) {
	.consulta-legislacao-compilada {
		flex: 0 0 25%;
		max-width: 25%;
		padding-right: 6px;
		padding-left: 6px;
	}
}

.conter-conteudo {
	padding: 20px;
}

.consulta-diversos {
	flex: 0 0 100%;
	max-width: 100%;
	padding-left: 0;
	padding-right: 0;
}

.consulta-diversos .consulta-item .item {
	padding-right: 10px;
	padding-left: 0;
}

.consulta-diversos .consulta-item .item + .item {
	padding-left: 10px;
	padding-right: 0;
}

@media (min-width: 576px) {
	.consulta-diversos {
		padding-right: 9px;
		flex: 0 0 33.33333%;
		max-width: 33.33333%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos {
		padding-right: 9px;
		flex: 0 0 16.66667%;
		max-width: 16.66667%;
	}
	.consulta-diversos .consulta-item .titulo-padrao {
		background-color: white;
	}
}

.consulta-diversos .item {
	flex: 0 0 50%;
	max-width: 50%;
}

.consulta-diversos .item img {
	max-width: 100%;
	height: auto;
}

@media (min-width: 992px) {
	.consulta-diversos .item {
		flex: 0 0 100%;
		max-width: 100%;
	}
}

@media (min-width: 576px) {
	.consulta-diversos .item + .item {
		margin-top: 10px;
	}
}

.consulta-diversos .selecionarTribunal {
	flex: 0 0 33.33333%;
	max-width: 33.33333%;
}

@media (min-width: 576px) {
	.consulta-diversos .selecionarTribunal {
		flex: 0 0 33.33333%;
		max-width: 33.33333%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .selecionarTribunal {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .selecionarTribunal {
		flex: 0 0 16.66667%;
		max-width: 16.66667%;
	}
}

.consulta-diversos .selecionarTipoPesquisa {
	flex: 0 0 66.66667%;
	max-width: 66.66667%;
}

@media (min-width: 576px) {
	.consulta-diversos .selecionarTipoPesquisa {
		flex: 0 0 66.66667%;
		max-width: 66.66667%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .selecionarTipoPesquisa {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .selecionarTipoPesquisa {
		flex: 0 0 33.33333%;
		max-width: 33.33333%;
	}
}

.consulta-diversos .pesquisa-box {
	flex: 0 0 100%;
	max-width: 100%;
}

@media (min-width: 576px) {
	.consulta-diversos .pesquisa-box {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .pesquisa-box {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

.consulta-diversos .pesquisa-box .box-3 {
	flex: 0 0 25%;
	max-width: 25%;
}

@media (min-width: 576px) {
	.consulta-diversos .pesquisa-box .box-3 {
		flex: 0 0 25%;
		max-width: 25%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .pesquisa-box .box-3 {
		flex: 0 0 25%;
		max-width: 25%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-3 {
		flex: 0 0 25%;
		max-width: 25%;
	}
}

.consulta-diversos .pesquisa-box .box-4 {
	flex: 0 0 25%;
	max-width: 25%;
}

@media (min-width: 576px) {
	.consulta-diversos .pesquisa-box .box-4 {
		flex: 0 0 25%;
		max-width: 25%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .pesquisa-box .box-4 {
		flex: 0 0 25%;
		max-width: 25%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-4 {
		flex: 0 0 33.33333%;
		max-width: 33.33333%;
	}
}

.consulta-diversos .pesquisa-box .box-5 {
	flex: 0 0 50%;
	max-width: 50%;
}

@media (min-width: 576px) {
	.consulta-diversos .pesquisa-box .box-5 {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .pesquisa-box .box-5 {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-5 {
		flex: 0 0 41.66667%;
		max-width: 41.66667%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-6 {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

.consulta-diversos .pesquisa-box .box-7 {
	flex: 0 0 50%;
	max-width: 50%;
}

@media (min-width: 576px) {
	.consulta-diversos .pesquisa-box .box-7 {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .pesquisa-box .box-7 {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-7 {
		flex: 0 0 58.33333%;
		max-width: 58.33333%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-7 {
		padding-left: 0;
	}
}

.consulta-diversos .pesquisa-box .box-8 {
	flex: 0 0 75%;
	max-width: 75%;
}

@media (min-width: 576px) {
	.consulta-diversos .pesquisa-box .box-8 {
		flex: 0 0 75%;
		max-width: 75%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .pesquisa-box .box-8 {
		flex: 0 0 75%;
		max-width: 75%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-8 {
		flex: 0 0 66.66667%;
		max-width: 66.66667%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .pesquisa-box .box-12 {
		flex: 0 0 100%;
		max-width: 100%;
	}
}

.consulta-diversos .consultas-mais-opcoes {
	flex: 0 0 100%;
	max-width: 100%;
}

@media (min-width: 576px) {
	.consulta-diversos .consultas-mais-opcoes {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 768px) {
	.consulta-diversos .consultas-mais-opcoes {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .consultas-mais-opcoes {
		flex: 0 0 100%;
		max-width: 100%;
	}
}

@media (min-width: 576px) {
	.consulta-diversos .consultas-mais-opcoes {
		top: 25px;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .consultas-mais-opcoes {
		top: 20px;
	}
}

@media (min-width: 992px) {
	.consulta-diversos .consultas .titulo-padrao {
		background-color: white;
	}
}

.consulta-diversos .consultas label {
	font-weight: 500;
}

.consulta-diversos .consultas .opcoes {
	flex: 0 0 100%;
	max-width: 100%;
}

@media (min-width: 992px) {
	.consulta-diversos .consultas .opcoes {
		flex: 0 0 100%;
		max-width: 100%;
	}
}

.badge-aovivo {
	background: #f90808;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #fff;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.badge-evento {
	background: #5adbff;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #000;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.badge-noticia {
	background: #47c77d;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #000;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.badge-destaque {
	background: #8f89db;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #000;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.badge-servico {
	background: #ffda59;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #000;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.badge-comunicado {
	background: #1b305a;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #fff;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.badge-video {
	background: #cd201f;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #fff;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.badge-radio {
	background: #FF7541;
	font-family: 'Open Sans', sans-serif;
	font-size: 10px;
	color: #000;
	font-weight: normal;
	position: absolute;
	padding-right: 0.6em !important;
	padding-left: 0.6em !important;
	border-radius: 10px;
}

.destaque .icone {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	height: 20%;
	margin: auto;
	width: 100%;
	transition: .5s all ease;
	opacity: 1;
	top: -25%;
	left: 0;
}

@media (min-width: 992px) {
	.destaque .icone {
		left: 25%;
		top: 0;
	}
}

.destaque .icone.transition {
	transition: .3s all ease;
	opacity: 0;
	bottom: 150px;
}

.destaque .icone-play-icon {
	filter: drop-shadow(0 1px 5px #121212);
	fill: #ffffff;
	width: 98%;
	height: 98%;
	transition: .4s all ease;
}

.destaque .icone-play-icon path {
	stroke: #121212;
	stroke-width: .5px;
}

.destaque .icone-play-icon:hover {
	transition: .4s all ease;
	width: 100%;
	height: 100%;
}

.destaque .icone-play-icon:hover path {
	stroke-width: .8px;
}

.destaque.oculto {
	display: none;
}

.destaque__conteudo-larger {
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	margin-right: auto;
	margin-left: auto;
}

@media (min-width: 576px) {
	.destaque__conteudo-larger {
		max-width: 540px;
	}
}

@media (min-width: 768px) {
	.destaque__conteudo-larger {
		max-width: 720px;
	}
}

@media (min-width: 992px) {
	.destaque__conteudo-larger {
		max-width: 960px;
	}
}

@media (min-width: 1200px) {
	.destaque__conteudo-larger {
		max-width: 1140px;
	}
}

@media (min-width: 992px) {
	.destaque__conteudo-larger {
		max-width: 73%;
	}
}

.destaque__carregando {
	display: flex;
	justify-content: center;
	margin: auto;
}

.destaque__carregando .spinner-border {
	color: #1b305a;
}

.destaque__carregando.oculto {
	display: none;
}

.destaque__principal {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
}

@media (max-width: 575.98px) {
	.destaque__principal {
		position: relative;
		width: 100%;
		padding-right: 5px;
		padding-left: 5px;
		flex: 0 0 100%;
		max-width: 100%;
		padding-top: 5px;
	}
	.destaque__principal img {
		object-fit: cover;
		top: 19px;
		border-radius: 5px;
		border-top: 20px;
		max-width: 100%;
		max-height: 200px;
	}
	.destaque__principal .destaque__titulo .titulo {
		font-size: 1rem;
		line-height: 1.25rem;
		line-height: 1.2rem;
		max-width: 92%;
		margin-left: 5px;
		transition: none;
	}
	.destaque__principal .destaque__titulo .titulo a {
		font-size: 1rem;
		line-height: 1.3rem;
	}
	.destaque__principal .destaque__titulo .titulo .sutia {
		display: none !important;
	}
	.destaque__principal .badge {
		display: none !important;
	}
}

@media (min-width: 576px) and (max-width: 767.98px) {
	.destaque__principal img {
		max-width: 100%;
	}
}

@media (min-width: 768px) and (max-width: 991.98px) {
	.destaque__principal img {
		max-width: 100%;
	}
}

@media (min-width: 992px) {
	.destaque__principal {
		flex: 0 0 66.66667%;
		max-width: 66.66667%;
	}
	.destaque__principal img {
		margin-left: -15px;
	}
}

.destaque__principal.owl-theme .owl-nav.disabled + .owl-dots {
	position: absolute;
	bottom: -5px;
	width: 98%;
}

.destaque__principal.owl-theme .owl-dots .owl-dot span {
	width: 16px;
	height: 6px;
	border-radius: 6px;
	box-shadow: 0px 4px 13px 1px rgba(0, 0, 0, 0.05);
}

.destaque__titulo {
	position: absolute;
	color: #fff;
	transition: .6s;
}

.destaque__titulo:focus, .destaque__titulo:hover {
	transition: .4s;
	cursor: pointer;
}

.destaque__titulo:focus .sutia, .destaque__titulo:hover .sutia {
	opacity: 1;
	display: block;
	transition: .4s;
}

.destaque__titulo:focus .sutia:before, .destaque__titulo:hover .sutia:before {
	content: "";
	display: block;
	width: 70px;
	height: 5px;
	background: #47c77d;
	transition: .4s;
	margin-bottom: 5px;
}

.destaque__titulo .titulo {
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	font-weight: 700;
	text-shadow: 1px 1px 2px black, 0 0 1em #6b6b6b, 0 0 0.2em #6b6b6b;
	margin-top: 1rem;
}

.destaque__titulo .titulo a {
	line-height: 3rem;
	color: #fff;
	text-decoration: none;
	transition: .4s;
}

.destaque__titulo .titulo a:focus, .destaque__titulo .titulo a:hover {
	transition: .4s;
}

.destaque__titulo .titulo span {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	font-size: 1.875rem;
	line-height: 2.125rem;
	font-weight: 400;
	letter-spacing: 1px;
	margin-top: 10px;
	opacity: 0;
	display: block;
	transition: .4s;
	color: #fff;
	text-shadow: 2px 2px 4px black, 0 0 1em #6b6b6b, 0 0 0.2em #6b6b6b;
}

.destaque__titulo .titulo span a {
	color: #1b305a;
	text-decoration: none;
}

.destaque__titulo .titulo span a:hover {
	color: #4671c8;
}

@keyframes vivo {
	0%,
	100% {
		opacity: 0;
	}
	50% {
		opacity: 1;
	}
}

.destaque__titulo .fa-circle {
	animation-name: vivo;
	animation-duration: 1s;
	animation-iteration-count: infinite;
}

.destaque__item .card {
	border: none;
	background: none;
}

.destaque__item .card p {
	position: absolute;
	bottom: 0;
	font-family: "Merriweather", sans-serif;
	font-size: 16px;
	color: #fff;
	font-weight: 700;
	letter-spacing: 1px;
	line-height: 24px;
	text-shadow: 2px 2px 4px black, 0 0 1em #6b6b6b, 0 0 0.4em #6b6b6b;
}

.destaque__item .card a {
	color: #fff;
	text-decoration: none;
	text-shadow: 1px 1px 2px black, 0 0 1em #6b6b6b, 0 0 0.4em #6b6b6b;
}

.destaque__item .card a:hover {
	text-shadow: 2px 2px 4px black, 0 0 1em #6b6b6b, 0 0 0.4em #6b6b6b;
	transition: .4s;
}

.destaque__item .card .card-img-overlay::before {
	content: "";
	opacity: .8;
	height: 50%;
	background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), #000);
	width: 100%;
	position: absolute;
	left: 0;
	bottom: 0;
}

@media (min-width: 992px) {
	_unico {
		flex: 0 0 100%;
		max-width: 100%;
	}
}

@media (min-width: 992px) {
	_unico .destaque__titulo {
		flex: 0 0 66.66667%;
		max-width: 66.66667%;
	}
}

.noticia {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
}

@media (min-width: 992px) {
	.noticia {
		position: relative;
		background: #e6ecf0;
	}
	.noticia .card {
		border: none;
		border-top-right-radius: 0px !important;
		border-top-left-radius: 0px !important;
		box-shadow: 0px 4px 13px 1px rgba(0, 0, 0, 0.05);
	}
	.noticia .card .card-body {
		border-top: 1px solid #e6ecf0;
	}
}

@media (max-width: 575.98px) {
	.noticia {
		position: relative;
		width: 100%;
		padding-right: 0;
		padding-left: 0;
		flex: 0 0 100%;
		max-width: 100%;
		padding: 5px;
	}
	.noticia .mais-noticias {
		padding: 0.625rem;
		background: #ffda59;
	}
	.noticia a {
		font-size: 14px;
	}
	.noticia .card {
		background-color: transparent;
		border: 0;
	}
	.noticia .card-body {
		padding: 0;
	}
	.noticia__titulo a::before {
		display: none !important;
	}
	.noticia__itens {
		background-color: #fff;
		padding: 0 20px;
	}
	.noticia__itens hr {
		margin: 5px 0;
	}
	.noticia__botoes {
		padding-right: 0 !important;
		padding-left: 0 !important;
		margin-top: 10px !important;
		border-top: none !important;
		display: flex;
		justify-content: space-between;
	}
	.noticia__botoes button.btn-custom {
		font-size: 14px;
		font-weight: bold;
		color: #1b305a;
		background-color: #fff;
		margin-right: 5px;
		margin-left: 5px;
		border-radius: 5px;
		justify-content: center;
		align-items: center;
	}
	.noticia__botoes button.btn-custom svg {
		color: #1b305a;
		margin-right: 5px;
	}
	.noticia__botoes button.btn-custom img {
		max-height: 15px;
		padding: 0;
	}
	.noticia__botoes button.btn-custom:first-child {
		border-bottom: none !important;
		margin-top: 0 !important;
		margin-left: 0;
	}
	.noticia__botoes button.btn-custom:last-child {
		border-top: none !important;
		margin-right: 0;
	}
}

.noticia__itens {
	border-right: 1px solid #e6ecf0;
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
}

@media (max-width: 575.98px) {
	.noticia__itens {
		flex: 0 0 100%;
		max-width: 100%;
		border-right: none;
	}
}

@media (min-width: 992px) {
	.noticia__itens {
		flex: 0 0 83.33333%;
		max-width: 83.33333%;
	}
}

.noticia__botoes {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
}

@media (min-width: 992px) {
	.noticia__botoes {
		flex: 0 0 16.66667%;
		max-width: 16.66667%;
	}
}

.noticia__botoes .btn-custom {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	font-size: 1rem;
	display: flex;
	font-weight: 400;
	color: #555;
	width: 100%;
	border-radius: 0;
	align-items: center;
}

.noticia__botoes .btn-custom a {
	color: #1b305a;
	text-decoration: none;
}

.noticia__botoes .btn-custom a:hover {
	color: #4671c8;
}

.noticia__botoes .btn-custom:first-child {
	border-bottom: 1px solid #ddd;
}

.noticia__botoes .btn-custom:last-child {
	border-top: 1px solid #ddd;
}

.noticia__botoes .btn-custom svg {
	margin-right: 15px;
}

.noticia__botoes .btn-custom img {
	padding: 5px 0;
	margin-right: 5px;
}

.noticia__botoes .btn-custom:hover {
	font-weight: 600;
	background: #47c77d;
	color: #fff;
}

.noticia__botoes .btn-custom:hover img {
	filter: contrast(10%) brightness(200%);
}

.noticia__titulo {
	font-family: "Merriweather", sans-serif;
	font-size: 18px;
	color: #6b6b6b;
	line-height: 20px;
}

.noticia__titulo a {
	text-decoration: none;
	transition: .4s;
}

.noticia__titulo a:before {
	content: " ";
	display: inline-block;
	margin-bottom: 5px;
	margin-right: 10px;
	background: #47c77d;
	height: 2px;
	width: 22px;
	transition: .4s;
}

.noticia__titulo a:focus, .noticia__titulo a:hover {
	margin-left: 5px;
	transition: .4s;
}

.noticia__titulo a:focus:before, .noticia__titulo a:hover:before {
	content: " ";
	display: inline-block;
	transition: .4s;
	margin-bottom: 5px;
	margin-right: 10px;
	background: #47c77d;
	height: 2px;
	width: 32px;
}

#destaque-principal .destaque-full {
	position: absolute;
	width: 100%;
	z-index: -1;
}

#destaque-principal .destaque-full-img {
	filter: blur(8px);
	position: relative;
	width: 100%;
	background-repeat: repeat-x;
	background-size: cover;
}

#destaque-principal #destaque-owl-carousel {
	display: flex;
	flex-flow: column;
	justify-content: space-around;
	min-height: 100%;
}

.destaque-secundario-container {
	width: 100%;
	padding-right: 0;
	padding-left: 0;
	margin-right: auto;
	margin-left: auto;
}

@media (max-width: 575.98px) {
	.destaque-secundario-container {
		display: none;
	}
}

.destaque-secundario-row {
	display: flex;
	flex-wrap: wrap;
	margin-right: 0;
	margin-left: 0;
}

.destaque-secundario-content-main {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
}

@media (min-width: 576px) {
	.destaque-secundario-content-main {
		flex: 0 0 100%;
		max-width: 100%;
	}
}

@media (min-width: 992px) {
	.destaque-secundario-content-main {
		background-color: #fff;
		display: flex;
		padding-top: 20px;
		padding-bottom: 20px;
	}
}

@media (min-width: 992px) {
	.destaque-secundario {
		flex: 0 0 100%;
		max-width: 100%;
	}
	.destaque-secundario__row {
		display: flex;
		flex-wrap: wrap;
		margin-right: 0;
		margin-left: 0;
	}
	.destaque-secundario__col-4 {
		position: relative;
		width: 100%;
		padding-right: 0;
		padding-left: 0;
		flex: 0 0 33.33333%;
		max-width: 33.33333%;
		margin-right: 15px;
	}
	.destaque-secundario__col-7 {
		position: relative;
		width: 100%;
		padding-right: 0;
		padding-left: 0;
		flex: 0 0 58.33333%;
		max-width: 58.33333%;
	}
	.destaque-secundario__card {
		border: 0;
		box-shadow: none;
	}
}

@media (min-width: 992px) and (min-width: 992px) {
	.destaque-secundario__card {
		position: relative;
		width: 100%;
		padding-right: 0;
		padding-left: 0;
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (min-width: 992px) {
	.destaque-secundario__card .icone {
		left: 0;
	}
	.destaque-secundario__card .card-body {
		padding: 0;
	}
	.destaque-secundario__card .card-img {
		max-width: 100%;
		height: auto;
		border-radius: 5px;
	}
	.destaque-secundario__card .card-title {
		font-family: "Merriwwather";
		font-size: 18px;
		font-weight: bold;
		margin-bottom: 0;
	}
	.destaque-secundario__card .card-title a {
		color: #1b305a;
	}
	.destaque-secundario__card .card-title a:hover {
		text-decoration: none;
	}
}

#home-avisos #avisos {
	background-color: #e6ecf0;
}

#home-avisos #avisos .aviso {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	flex: 0 0 100%;
	max-width: 100%;
	padding-top: 24px;
	padding-bottom: 24px;
	text-align: center;
}

.banners {
	position: relative;
	display: block;
	max-height: 550px;
	margin-bottom: 40px;
}

@media (max-width: 575.98px) {
	.banners {
		flex: 0 0 100%;
		max-width: 100%;
		height: 390px;
	}
}

.banners .banners__container {
	display: block;
	text-align: center;
	overflow: hidden;
}

@media (max-width: 575.98px) {
	.banners .banners__container {
		flex: 0 0 100%;
		max-width: 100%;
		max-height: 275px;
	}
}

@media (max-width: 991.98px) {
	.banners .banners__container {
		background-color: #000;
	}
}

.banners .banners__container .banners__item {
	min-height: 275px;
	padding-bottom: 0px;
}

@media (min-width: 768px) {
	.banners .banners__container .banners__item {
		background-color: #000;
		min-height: 550px;
	}
}

.banners .banners__container .banners__item .banners__figure__fundo {
	display: block;
	background-color: #000;
	padding: 0px;
}

.banners .banners__container .banners__item .banners__figure__fundo .item__img__fundo {
	filter: blur(5px);
	opacity: 0.5;
	position: absolute;
	object-fit: cover;
}

.banners .banners__container .banners__item .banners__figure {
	padding-bottom: 0px;
	padding-left: 0px;
	height: 147px;
	overflow: hidden;
}

@media (max-width: 991.98px) {
	.banners .banners__container .banners__item .banners__figure {
		padding: 4%;
	}
}

@media (min-width: 768px) {
	.banners .banners__container .banners__item .banners__figure {
		height: auto;
	}
}

.banners .banners__container .banners__item .item__img {
	width: 100%;
	opacity: 1;
	position: relative;
}

@media (min-width: 768px) {
	.banners .banners__container .banners__item .item__img {
		filter: blur(5px);
		opacity: 0.4;
		position: absolute;
	}
}

.banners .banners__container .banners__item .btn-outline-amarelo {
	margin-top: 15px;
	margin-bottom: 15px;
}

.banners .banners__container .banners__item .item__texto {
	width: 100%;
	position: relative;
	padding: 10px;
}

@media (min-width: 992px) {
	.banners .banners__container .banners__item .item__texto {
		padding: 60px;
		padding-top: 30px;
		position: absolute;
		z-index: 9999999;
	}
}

.banners .banners__container .banners__item .item__texto h3 {
	width: 100%;
	font-size: 1em;
	font-family: "Merriweather", sans-serif;
	color: #fff;
	padding-bottom: 20px;
	margin: 0 auto;
}

@media (max-width: 575.98px) {
	.banners .banners__container .banners__item .item__texto h3 {
		flex: 0 0 100%;
		max-width: 100%;
		font-family: "Merriweather", sans-serif;
		font-size: 2.25rem;
		line-height: 3rem;
		color: #ffffff;
		font-weight: 700;
		font-size: 0.875rem;
		color: #ffffff;
		margin-top: 10px;
		line-height: 0;
	}
}

@media (min-width: 992px) {
	.banners .banners__container .banners__item .item__texto h3 {
		width: 920px;
		font-size: 2em;
		color: #fff;
	}
}

.banners .banners__container .banners__item .item__texto p {
	width: 100%;
	font-size: 0.9em;
	font-family: "Open Sans", sans-serif;
	color: #fff;
	border-top: 1px #787a79 solid;
	border-bottom: 1px #787a79 solid;
	padding: 5px;
	margin: 0 auto;
	margin-bottom: 10px;
}

@media (min-width: 992px) {
	.banners .banners__container .banners__item .item__texto p {
		font-weight: 400;
		font-family: 'Open Sans', sans-serif;
		font-size: 1.125rem;
		line-height: 1.625rem;
		color: #6b6b6b;
		width: 920px;
		font-size: 1rem;
		line-height: 1.4rem;
		padding: 20px;
		color: #fff;
	}
	.banners .banners__container .banners__item .item__texto p a {
		color: #1b305a;
		text-decoration: none;
	}
	.banners .banners__container .banners__item .item__texto p a:hover {
		color: #4671c8;
	}
}

@media (max-width: 575.98px) {
	.banners .banners__container .banners__item .item__texto p {
		flex: 0 0 100%;
		max-width: 100%;
		font-family: "Open Sans", sans-serif;
		font-size: 0.825rem;
		line-height: 1rem;
		text-align: left;
	}
}

.banners .banners__container .banners__item .item__texto .item__link {
	background-color: #fff;
	color: #333333;
	border: none;
	border-radius: 7px;
}

.banners .banners__container .banners__item .item__texto .item__link:hover {
	background-color: transparent;
	color: #333333;
	border: 1px #333333 solid;
	transition: 1s;
}

.banners .banners__thumbnail {
	position: relative;
	bottom: 270px;
	max-width: 1140px;
	display: block;
	margin: auto;
}

@media (max-width: 575.98px) {
	.banners .banners__thumbnail {
		z-index: 0 !important;
	}
}

.banners .banners__thumbnail .owl-dot.active span {
	background-color: #1b305a;
}

@media (min-width: 768px) {
	.banners .banners__thumbnail {
		bottom: 370px;
	}
}

@media (min-width: 992px) {
	.banners .banners__thumbnail {
		bottom: 270px;
	}
}

.banners .banners__thumbnail .banners__thumbnail-slider {
	border-bottom: 0;
	text-align: center;
	padding: 0px;
	margin: 0px;
}

@media (min-width: 768px) {
	.banners .banners__thumbnail .banners__thumbnail-slider {
		width: 1000px margin auto;
	}
}

.banners .banners__thumbnail .banners__thumbnail-slider li {
	list-style: none;
}

.banners .banners__thumbnail .banners__thumbnail-slider .thumbnail__item {
	margin: 15px;
	display: inherit;
	text-align: center;
}

.banners .banners__thumbnail .banners__thumbnail-slider .thumbnail__item .item__figure {
	border: 2px #333333 solid;
	width: 259px;
	height: 147px;
	overflow: hidden;
	padding-left: 0px;
	margin: auto;
}

@media (max-width: 575.98px) {
	.banners .banners__thumbnail .banners__thumbnail-slider .thumbnail__item .item__figure {
		flex: 0 0 100%;
		max-width: 100%;
		border: none;
		margin-top: 204px;
		border-radius: 5px;
	}
}

.banners .banners__thumbnail .banners__thumbnail-slider .thumbnail__item .item__figure .item__img {
	min-height: 147px;
	overflow: hidden;
}

.banners .banners__thumbnail .banners__thumbnail-slider .thumbnail__item.active ::before {
	content: "\f0d7";
	color: #ffda59;
	transition: 1s;
	font-family: FontAwesome;
	font-size: 2em;
	position: absolute;
	top: -15px;
}

.banners .banners__thumbnail .banners__thumbnail-slider .thumbnail__item.active .item__figure {
	border: 2px #ffda59 solid;
	transition: 0.7s;
}

.banners .banners__thumbnail .banners__thumbnail-slider .thumbnail__item :hover.item__figure {
	border: 2px #ffda59 solid;
	transition: 0.7s;
}

@media (min-width: 768px) {
	.full-card-titulo h4,
	.full-card-titulo .card-descricao {
		font-size: 1rem;
	}
}

@media (min-width: 992px) {
	.full-card-titulo h4,
	.full-card-titulo .card-descricao {
		font-size: 1.4rem;
		font-family: "Merriweather", sans-serif;
		font-weight: 700;
	}
}

.full-card-titulo a:hover {
	color: #ffffff;
}

.full-cards {
	padding-top: 1.875rem;
}

.full-cards .owl-carousel .owl-stage {
	display: flex;
}

.full-cards .owl-carousel .owl-item img {
	width: auto;
	height: 100%;
}

.full-cards .owl-theme .owl-dot span {
	background: #ffda59;
}

.full-cards .owl-dot {
	outline: none !important;
}

.full-cards .owl-item:active {
	padding-right: 0 !important;
}

.full-cards .owl-item:hover {
	background: #1b305a !important;
}

.full-cards .owl-theme .owl-dot.active span {
	background: #1b305a;
}

.full-cards .item {
	height: 100%;
	background-color: #ffffff;
	text-align: center;
	padding-top: 2.5rem;
	padding-bottom: 2.5rem;
}

.full-cards .item:first-child::after {
	content: "";
	position: absolute;
	height: 50%;
	right: 0;
	bottom: 25%;
	top: 25%;
	border-right: 1px solid #ebebeb;
}

.full-cards .item img {
	width: 5rem;
	height: 5.125rem;
	margin: auto;
}

.full-cards .stretched-link {
	background: none !important;
	outline: none;
	box-shadow: none !important;
	color: #6b6b6b;
}

.full-cards .owl-carousel .owl-stage:last-child::after {
	width: 0;
}

.full-cards .card-justica-eleitoral a {
	background-color: transparent;
	border: 0;
}

.full-cards .card-justica-eleitoral:hover {
	background-color: #406fbc;
}

.full-cards .card-justica-eleitoral:hover::after {
	border-right: none;
}

.full-cards .card-justica-eleitoral:hover h4 {
	color: #ffffff;
}

.full-cards .card-justica-eleitoral:hover img {
	-ms-filter: contrast(10%) brightness(200%);
	filter: contrast(10%) brightness(200%);
}

.full-cards .card-regulariza-titulo a {
	background-color: transparent;
	border: 0;
}

.full-cards .card-regulariza-titulo:hover {
	background-color: #48a681;
}

.full-cards .card-regulariza-titulo:hover::after {
	border-right: none;
}

.full-cards .card-regulariza-titulo:hover h4 {
	color: #ffffff;
}

.full-cards .card-regulariza-titulo:hover img {
	-ms-filter: contrast(10%) brightness(200%);
	filter: contrast(10%) brightness(200%);
}

.full-cards .card-respostas-biometria a {
	background-color: transparent;
	border: 0;
}

.full-cards .card-respostas-biometria:hover {
	background-color: #ffda59;
}

.full-cards .card-respostas-biometria:hover::after {
	border-right: none;
}

.full-cards .card-respostas-biometria:hover h4 {
	color: #ffffff;
}

.full-cards .card-respostas-biometria:hover img {
	-ms-filter: contrast(10%) brightness(200%);
	filter: contrast(10%) brightness(200%);
}

.full-cards .card-seguranca-urna a {
	background-color: transparent;
	border: 0;
}

.full-cards .card-seguranca-urna:hover {
	background-color: #48c37c;
}

.full-cards .card-seguranca-urna:hover::after {
	border-right: none;
}

.full-cards .card-seguranca-urna:hover h4 {
	color: #ffffff;
}

.full-cards .card-seguranca-urna:hover img {
	-ms-filter: contrast(10%) brightness(200%);
	filter: contrast(10%) brightness(200%);
}

.redes-sociais__conteudo {
	padding-top: 48px;
	padding-bottom: 48px;
}

.redes-sociais__conteudo .veiculos-redes {
	position: relative;
	width: 100%;
	padding-right: 0;
	padding-left: 0;
}

@media (max-width: 575.98px) {
	.redes-sociais__conteudo {
		flex: 0 0 100%;
		max-width: 100%;
		padding-left: 12px;
		padding-right: 12px;
	}
	.redes-sociais__conteudo h2.titulo-redes-sociais {
		font-size: calc(1.3rem + 0.6vw);
	}
}

.redes-sociais__conteudo .titulo-redes-sociais {
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	line-height: 3rem;
	color: #ffffff;
	font-weight: 700;
	color: #1b305a;
	text-align: center;
	margin: 30px 0 30px 0;
}

.redes-sociais__conteudo .redes__linha {
	border-radius: 10px;
	background: #ffffff;
	padding-top: 12px;
	padding-bottom: 12px;
	box-shadow: 0px 4px 13px 1px rgba(0, 0, 0, 0.05);
	margin: auto;
	font-size: 0.875rem;
}

@media (max-width: 575.98px) {
	.redes-sociais__conteudo .redes__linha {
		border-radius: 5px;
	}
	.redes-sociais__conteudo .redes__linha .card-titulo {
		display: none !important;
	}
}

.redes-sociais__conteudo .redes__linha img {
	width: 40%;
	height: auto;
}

@media (min-width: 992px) {
	.redes-sociais__conteudo .redes__linha {
		font-size: 16px;
		max-width: 992px;
	}
	.redes-sociais__conteudo .redes__linha img {
		height: 46px;
		width: auto;
	}
}

.redes-sociais__conteudo .rede-card {
	text-align: center;
	min-width: 20%;
	border-right: 1px solid #ebebeb;
	font-size: 1em;
}

.redes-sociais__conteudo .rede-card:last-child {
	border-right: none;
}

.redes-sociais__conteudo .rede-card a {
	text-decoration: none;
	color: #2b2b2b;
}

.redes-sociais__conteudo .rede-card a:hover {
	font-weight: 700;
}

.redes-sociais__conteudo .rede-card .card-titulo {
	display: block;
	padding-top: 12px;
}

.btn-instagram {
	color: #ec22a1;
	background: #fcf2fb;
	border: 1px solid #fcf2fb;
}

.btn-instagram:hover {
	color: #fcf2fb;
	background: #ec22a1;
	border: 1px solid #ec22a1;
}

.btn-facebook {
	color: #675ddc;
	background: #dfe5f0;
	border: 1px solid #dfe5f0;
}

.btn-facebook:hover {
	color: #dfe5f0;
	background: #675ddc;
	border: 1px solid #675ddc;
}

.btn-youtube {
	color: #ed1e24;
	background: #fde8e8;
	border: 1px solid #fde8e8;
}

.btn-youtube:hover {
	color: #dfe5f0;
	background: #ed1e24;
	border: 1px solid #ed1e24;
}

/*Extend - bordas transparentes, menos bottom*/
.border-no-bottom-transparent, .servicos__nav .nav-link:hover, .servicos__nav .nav-link.active, .servicos__nav .nav-link.active:hover, .destaque-temas__lista_item {
	border-top-color: transparent;
	border-left-color: transparent;
	border-right-color: transparent;
}

/*Extend - bordas transparentes, menos bottom*/
.servicos {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	margin-top: 10px;
}

@media (max-width: 991.98px) {
	.servicos {
		flex: 0 0 100%;
		max-width: 100%;
		padding-left: 10px;
		padding-right: 10px;
	}
}

@media (min-width: 992px) and (max-width: 1199.98px) {
	.servicos {
		flex: 0 0 50%;
		max-width: 50%;
		padding-right: 0;
	}
}

@media (min-width: 1200px) {
	.servicos {
		flex: 0 0 50%;
		max-width: 50%;
		padding-right: 1.5rem;
	}
}

.servicos_bloco {
	flex: 0 0 100%;
	max-width: 100%;
	background-color: #ffffff;
	border-radius: 10px;
	box-shadow: 0px 4px 13px 1px rgba(0, 0, 0, 0.05);
}

.servicos a {
	color: #1b305a;
	text-decoration: none;
}

.servicos a:hover {
	color: #4671c8;
}

.servicos a {
	color: #6b6b6b;
}

.servicos a:hover {
	color: #6b6b6b;
}

.servicos__nav {
	border: none;
	padding-left: 1rem;
	padding-right: 1rem;
	position: relative;
}

.servicos__nav_item {
	margin-left: 0 !important;
	background: transparent !important;
}

@media (max-width: 575.98px) {
	.servicos__nav_item {
		flex: 0 0 100%;
		max-width: 100%;
	}
}

@media (min-width: 576px) {
	.servicos__nav_item {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

@media (max-width: 575.98px) {
	.servicos__nav_link {
		text-align: center;
	}
}

@media (min-width: 576px) {
	.servicos__nav_link {
		text-align: left;
	}
}

@media (max-width: 575.98px) {
	.servicos__nav {
		padding-bottom: 1rem;
	}
}

.servicos__nav .nav-link {
	border-bottom-color: #ebebeb !important;
	border-bottom-style: solid;
	border-bottom-width: 3px !important;
	color: #6b6b6b !important;
	padding-top: 15.512px;
	padding-bottom: 7.512px;
}

.servicos__nav .nav-link.active {
	background-color: #ffffff;
	border-bottom-color: #ffda59 !important;
	border-top-left-radius: 10px !important;
	color: #6b6b6b;
	font-size: 1.1em;
	font-weight: bold;
	padding-top: 7.512px;
	padding-bottom: 13.512px;
}

@media (min-width: 576px) {
	.servicos__nav:after {
		background-color: #ebebeb;
		content: '';
		left: 50%;
		height: 38px;
		position: absolute;
		top: 6px;
		width: 1px;
	}
}

.servicos__lista {
	position: relative;
	width: 100%;
	padding-right: 0;
	padding-left: 0;
	display: flex;
	flex-wrap: wrap;
	margin-right: 0;
	margin-left: 0;
	padding-right: 1rem;
	padding-left: 1rem;
}

.servicos__lista_item {
	border-bottom-color: #ebebeb;
	border-bottom-style: solid;
	border-bottom-width: 1px;
}

@media (max-width: 575.98px) {
	.servicos__lista_item {
		flex: 0 0 100%;
		max-width: 100%;
		text-align: center;
		padding-bottom: 0.5rem;
		padding-top: 0.5rem;
	}
}

@media (min-width: 576px) {
	.servicos__lista_item {
		flex: 0 0 50%;
		max-width: 50%;
		padding-bottom: 1.35rem;
		padding-top: 1.35rem;
	}
	.servicos__lista_item:nth-child(1) {
		padding-right: .5rem;
	}
	.servicos__lista_item:nth-child(2) {
		padding-left: .5rem;
	}
	.servicos__lista_item:nth-child(3) {
		padding-right: .5rem;
	}
	.servicos__lista_item:nth-child(4) {
		padding-left: .5rem;
	}
	.servicos__lista_item:nth-child(5) {
		border-bottom: none;
		padding-right: .5rem;
	}
	.servicos__lista_item:nth-child(6) {
		border-bottom: none;
		padding-left: .4rem;
	}
}

.servicos__lista_link {
	display: flex;
	flex-wrap: wrap;
	margin-right: 0;
	margin-left: 0;
	flex: 0 0 100%;
	max-width: 100%;
	color: #6b6b6b;
	align-items: center;
	background-color: #ebebeb;
	border-radius: 5px;
	display: flex;
	padding-bottom: 1rem;
	padding-top: 1rem;
	text-align: left;
}

@media (min-width: 992px) and (max-width: 1199.98px) {
	.servicos__lista_link {
		padding-right: 0;
		padding-left: .5em;
	}
}

@keyframes animacao-seta {
	0% {
		left: 0;
	}
	50% {
		left: 15px;
	}
	100% {
		left: 10px;
	}
}

.servicos__lista_link:hover {
	background-color: #ffda59;
	color: #6b6b6b;
	font-weight: bold;
	justify-content: center;
	-webkit-animation-name: transicao-cor;
	-webkit-animation-duration: .4s;
	animation-name: transicao-cor;
	animation-duration: .4s;
}

.servicos__lista_link:hover:after {
	background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='11' viewBox='0 0 16 11'%3E%3Cg transform='translate(-106.92 -85.923)matrix(0.49027 0 0 0.42194 106.92 84.538)' fill='%231a1a1a'%3E%3Cpath d='m32.1 16.8h-31.6c-0.3 0-0.5-0.2-0.5-0.5s0.2-0.5 0.5-0.5h31.6c0.3 0 0.5 0.2 0.5 0.5s-0.2 0.5-0.5 0.5z'/%3E%3Cpath d='m19.6 29.4c-0.1 0-0.3 0-0.4-0.1-0.2-0.2-0.2-0.5 0-0.7l12.2-12.2-12.2-12.2c-0.2-0.2-0.2-0.5 0-0.7s0.5-0.2 0.7 0l12.5 12.5c0.1 0.1 0.1 0.2 0.1 0.4s-0.1 0.3-0.1 0.4l-12.5 12.5c-0.1 0.1-0.2 0.1-0.4 0.1z'/%3E%3C/g%3E%3C/svg%3E");
	background-repeat: no-repeat;
	content: "";
	height: 11px;
	left: 10px;
	position: relative;
	width: 16px;
	-webkit-animation-name: animacao-seta;
	-webkit-animation-duration: .4s;
	animation-name: animacao-seta;
	animation-duration: .4s;
}

.servicos__lista_link:hover:before {
	background: none;
}

.servicos__lista_link:before {
	background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='11' viewBox='0 0 16 11'%3E%3Cg transform='translate(-106.92 -85.923)matrix(0.49027 0 0 0.42194 106.92 84.538)' fill='%23999'%3E%3Cpath d='m32.1 16.8h-31.6c-0.3 0-0.5-0.2-0.5-0.5s0.2-0.5 0.5-0.5h31.6c0.3 0 0.5 0.2 0.5 0.5s-0.2 0.5-0.5 0.5z'/%3E%3Cpath d='m19.6 29.4c-0.1 0-0.3 0-0.4-0.1-0.2-0.2-0.2-0.5 0-0.7l12.2-12.2-12.2-12.2c-0.2-0.2-0.2-0.5 0-0.7s0.5-0.2 0.7 0l12.5 12.5c0.1 0.1 0.1 0.2 0.1 0.4s-0.1 0.3-0.1 0.4l-12.5 12.5c-0.1 0.1-0.2 0.1-0.4 0.1z'/%3E%3C/g%3E%3C/svg%3E");
	background-repeat: no-repeat;
	color: #6b6b6b;
	content: "";
	width: 16px;
	height: 11px;
	margin-right: 10px;
}

@media (min-width: 992px) and (max-width: 1199.98px) {
	.servicos__lista_link:before {
		content: "";
		background: none;
	}
}

@keyframes transicao-cor {
	0% {
		background-color: #ebebeb;
	}
	100% {
		background-color: #ffda59;
	}
}

/*Extend - bordas transparentes, menos bottom*/
.border-no-bottom-transparent, .servicos__nav .nav-link:hover, .servicos__nav .nav-link.active, .servicos__nav .nav-link.active:hover, .destaque-temas__lista_item {
	border-top-color: transparent;
	border-left-color: transparent;
	border-right-color: transparent;
}

/*Extend - bordas transparentes, menos bottom*/
.destaque-temas {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	letter-spacing: 1px;
	margin-top: 10px;
}

@media (max-width: 991.98px) {
	.destaque-temas {
		flex: 0 0 100%;
		max-width: 100%;
		padding-left: 10px;
		padding-right: 10px;
	}
}

@media (min-width: 992px) and (max-width: 1199.98px) {
	.destaque-temas {
		flex: 0 0 50%;
		max-width: 50%;
		padding-left: 1rem;
	}
}

@media (min-width: 1200px) {
	.destaque-temas {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

.destaque-temas a {
	color: #1b305a;
	text-decoration: none;
}

.destaque-temas a:hover {
	color: #4671c8;
}

.destaque-temas a {
	color: #6b6b6b;
}

.destaque-temas a:hover {
	color: #6b6b6b;
}

.destaque-temas__card_bloco {
	border: transparent;
	border-radius: 10px;
	box-shadow: 0px 4px 13px 1px rgba(0, 0, 0, 0.05);
	margin-bottom: .6rem;
}

.destaque-temas__card_bloco-imagem {
	align-items: center;
	color: #6b6b6b;
	display: flex;
	flex-direction: column;
	font-size: 1em;
	justify-content: center;
	line-height: 1.1rem;
	min-height: 117px;
	position: relative;
}

@media (max-width: 575.98px) {
	.destaque-temas__card_bloco-imagem {
		flex: 0 0 100%;
		max-width: 100%;
		padding-bottom: 1rem;
		padding-top: 2rem;
	}
}

@media (min-width: 576px) {
	.destaque-temas__card_bloco-imagem {
		flex: 0 0 33.33333%;
		max-width: 33.33333%;
	}
	.destaque-temas__card_bloco-imagem:after {
		content: "";
		height: 90%;
		right: 0;
		width: 1px;
		background-color: #ebebeb;
		position: absolute;
	}
}

.destaque-temas__card_bloco-imagem .destaque-temas__card_imagem {
	max-width: 54px;
}

.destaque-temas__card_bloco-imagem .destaque-temas__card_titulo-imagem {
	font-weight: 600;
	font-size: 1em;
	line-height: 1.3rem;
	letter-spacing: normal !important;
	text-align: center;
	margin-top: .5rem;
}

.destaque-temas__card_texto {
	align-items: center;
	display: flex;
}

@media (max-width: 575.98px) {
	.destaque-temas__card_texto {
		flex: 0 0 100%;
		max-width: 100%;
		padding-bottom: 2rem;
		padding-top: 1rem;
	}
}

@media (min-width: 576px) {
	.destaque-temas__card_texto {
		flex: 0 0 66.66667%;
		max-width: 66.66667%;
	}
}

.destaque-temas__card_texto .card-body {
	padding: 0;
}

.destaque-temas__lista {
	padding-left: 3rem;
	padding-right: 3rem;
}

.destaque-temas__lista_item {
	border-bottom-color: #ebebeb;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	display: list-item;
}

@media (max-width: 575.98px) {
	.destaque-temas__lista_item {
		padding-top: .3rem;
		padding-bottom: .3rem;
	}
}

.destaque-temas__lista_item:last-child {
	border-bottom-color: transparent;
}

.destaque-temas__lista_link {
	color: #6b6b6b;
	padding-left: 0;
	padding-right: 0;
}

@keyframes transicao-cor-destaques {
	0% {
		background-color: #ebebeb;
	}
	50% {
		background-color: #ffda59;
	}
	100% {
		background-color: #ffda59;
		border-color: #ffda59;
		border-style: solid;
		border-width: 2px;
	}
}

.destaque-temas__lista_link:before {
	content: "";
	width: 12px;
	height: 12px;
	background-color: #ebebeb;
	display: inline-block;
	border-radius: 10px;
	margin-right: 10px;
}

.destaque-temas__lista_link:hover {
	color: #6b6b6b;
	font-weight: bold;
}

.destaque-temas__lista_link:hover:before {
	-webkit-animation-name: transicao-cor-destaques;
	-webkit-animation-duration: 1s;
	animation-name: transicao-cor-destaques;
	animation-duration: 1s;
	background-color: #ffda59;
	border-color: #ffda59;
	border-style: solid;
	border-width: 2px;
}

@media (min-width: 992px) and (max-width: 1199.98px) {
	.destaque-temas__lista {
		padding-left: 1rem;
		padding-right: 1rem;
	}
}

@media (max-width: 575.98px) {
	#cards-social-media {
		flex: 0 0 100%;
		max-width: 100%;
		padding-left: 12px;
		padding-right: 12px;
	}
	#cards-social-media .card-post .morecontent span {
		display: none;
	}
	#cards-social-media h2.titulo-redes-em-alta {
		font-size: calc(1.3rem + 0.6vw);
	}
	#cards-social-media h3 {
		font-size: 1.25rem !important;
		line-height: 1.6rem !important;
	}
}

#cards-social-media .titulo-redes-em-alta {
	font-family: "Merriweather", sans-serif;
	font-size: 2.25rem;
	line-height: 3rem;
	color: #ffffff;
	font-weight: 700;
	color: #1b305a;
	text-align: center;
	margin: 30px 0 30px 0;
}

#cards-social-media .cards-social-media__linha {
	display: flex;
	flex-wrap: wrap;
	margin-right: -15px;
	margin-left: -15px;
}

#cards-social-media .cards-conteudo {
	padding: 0 5px 0 5px;
}

#cards-social-media .cards-conteudo video {
	max-width: 100%;
}

@media (max-width: 575.98px) {
	#cards-social-media .cards-conteudo {
		flex: 0 0 100%;
		max-width: 100%;
		margin-bottom: 40px;
	}
	#cards-social-media .cards-conteudo .card-footer {
		background-color: #ebebeb;
		border: none;
	}
	#cards-social-media .cards-conteudo .leia-mais {
		border-top: 1px solid #ebebeb;
		font-size: 80%;
		color: #1b305a;
		font-weight: 700;
	}
}

@media (min-width: 576px) {
	#cards-social-media .cards-conteudo {
		flex: 0 0 100%;
		max-width: 100%;
		margin-bottom: 20px;
	}
}

@media (min-width: 768px) {
	#cards-social-media .cards-conteudo {
		flex: 0 0 25%;
		max-width: 25%;
	}
}

@media (min-width: 992px) {
	#cards-social-media .cards-conteudo {
		flex: 0 0 25%;
		max-width: 25%;
	}
}

#cards-social-media .cards-header {
	border-bottom: 1px solid #ebebeb;
	padding: 0.75rem 0.75rem;
}

#cards-social-media .card {
	border-radius: 5px;
	background-color: #ffffff;
}

#cards-social-media .card .card-body {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	font-size: 0.875rem;
	line-height: 1.5rem;
	padding: 0.6rem 0.75rem;
	color: #6b6b6b;
}

#cards-social-media .card .card-body a {
	color: #1b305a;
	text-decoration: none;
}

#cards-social-media .card .card-body a:hover {
	color: #4671c8;
}

#cards-social-media .card .card-body .card-title {
	font-weight: 700;
	font-size: 1.2rem;
	line-height: 1.5rem;
}

#cards-social-media .card-post {
	padding-top: 0.625rem;
	padding-bottom: 0.625rem;
}

#cards-social-media .card-post .card-img-top {
	border-bottom-left-radius: calc(0.25rem - 1px);
	border-bottom-right-radius: calc(0.25rem - 1px);
	object-fit: cover;
	height: 200px;
}

#cards-social-media .card-post time {
	background: #ebebeb;
	font-size: 0.625rem;
	padding: 5px;
	border-radius: 20px;
}

#cards-social-media .card-post:nth-child(2) {
	border-top: 1px solid #ebebeb;
	border-bottom: 1px solid #ebebeb;
}

#cards-social-media .card .card-text a, #cards-social-media .card .card-footer a {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	color: #1b305a;
	font-size: 0.875rem;
	font-weight: bold;
}

#cards-social-media .card .card-text a a, #cards-social-media .card .card-footer a a {
	color: #1b305a;
	text-decoration: none;
}

#cards-social-media .card .card-text a a:hover, #cards-social-media .card .card-footer a a:hover {
	color: #4671c8;
}

#cards-social-media .card .fa-chevron-circle-right {
	margin-left: 5px;
}

#cards-social-media .link-post {
	font-weight: 700;
}

#cards-social-media .card-facebook a {
	color: #3b5999;
}

#cards-social-media .card-facebook .card-header {
	background: url("../imagens/icon-social-media-facebook.png") no-repeat left 5% top 81%;
}

#cards-social-media .card-twitter a {
	color: #55acee;
}

#cards-social-media .card-twitter .card-header {
	background: url("../imagens/icon-social-media-twitter.png") no-repeat left 5% top 81%;
}

#cards-social-media .card-youtube a {
	color: #cd201f;
}

#cards-social-media .card-youtube .card-header {
	background: url("../imagens/icon-social-media-youtube.png") no-repeat left 5% top 81%;
}

#cards-social-media .card-instagram a {
	color: #e4405f;
}

#cards-social-media .card-instagram .card-header {
	background: url("../imagens/icon-social-media-instagram.png") no-repeat left 5% top 81%;
}

#cards-social-media .card-header {
	color: #6b6b6b;
}

#cards-social-media .card-header .subtitulo-redes-em-alta {
	margin: 5px 0 0 45px;
	font-size: 1rem;
}

#cards-social-media .card-footer {
	display: flex;
	flex-wrap: wrap;
	margin-right: 0;
	margin-left: 0;
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	justify-content: flex-end;
}

#cards-social-media .card-footer .text-left {
	flex: 0 0 41.66667%;
	max-width: 41.66667%;
	padding-left: 5px;
	padding-top: 2px;
}

#cards-social-media .card-footer .text-left time {
	margin-top: 5px;
	font-size: 0.75rem;
	color: #6b6b6b;
}

#cards-social-media .card-footer .text-right {
	flex: 0 0 58.33333%;
	max-width: 58.33333%;
	padding-right: 5px;
}

#cards-social-media .card-footer .text-right a {
	padding-right: 5px;
	margin-bottom: 10px;
	font-size: 0.75rem;
	font-weight: bold;
}

#cards-social-media .card-footer .morecontent span {
	display: none;
}

#cards-social-media .card-footer .morelink {
	display: block;
	font-size: 0.8rem;
	color: #1b305a !important;
	border-top: 1px solid #6b6b6b;
}

.dje-formulario {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
}

@media (min-width: 992px) {
	.dje-formulario {
		flex: 0 0 50%;
		max-width: 50%;
	}
}

.dje-formulario #dje-form {
	display: flex;
	flex-flow: row wrap;
	align-items: center;
}

.dje-materias {
	position: relative;
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
}

@media (min-width: 576px) {
	.dje-materias {
		flex: 0 0 100%;
		max-width: 100%;
		max-width: 768px;
		margin: 0 auto;
	}
}

.dje-materias .btn {
	float: right;
}

.dje-titulo {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
}

.dje-titulo a {
	color: #1b305a;
	text-decoration: none;
}

.dje-titulo a:hover {
	color: #4671c8;
}

.dje .dje-alerta {
	position: relative;
	padding: 0.75rem 1.25rem;
	margin-bottom: 1rem;
	border: 1px solid transparent;
	border-radius: 0.25rem;
}

.dje .dje-alerta-titulo {
	color: inherit;
}

.dje .dje-alerta-link {
	font-weight: 700;
}

.dje .dje-alerta-dispensavel {
	padding-right: 4rem;
}

.dje .dje-alerta-dispensavel .close {
	position: absolute;
	top: 0;
	right: 0;
	padding: 0.75rem 1.25rem;
	color: inherit;
}

.dje .dje-alerta-primary {
	color: #0e192f;
	background-color: #d1d6de;
	border-color: #bfc5d1;
}

.dje .dje-alerta-primary hr {
	border-top-color: #b0b8c6;
}

.dje .dje-alerta-primary .alert-link {
	color: #020408;
}

.dje .dje-alerta-secondary {
	color: #383d41;
	background-color: #e2e3e5;
	border-color: #d6d8db;
}

.dje .dje-alerta-secondary hr {
	border-top-color: #c8cbcf;
}

.dje .dje-alerta-secondary .alert-link {
	color: #202326;
}

.dje .dje-alerta-success {
	color: #155724;
	background-color: #d4edda;
	border-color: #c3e6cb;
}

.dje .dje-alerta-success hr {
	border-top-color: #b1dfbb;
}

.dje .dje-alerta-success .alert-link {
	color: #0b2e13;
}

.dje .dje-alerta-info {
	color: #256741;
	background-color: #daf4e5;
	border-color: #cbefdb;
}

.dje .dje-alerta-info hr {
	border-top-color: #b8e9ce;
}

.dje .dje-alerta-info .alert-link {
	color: #184129;
}

.dje .dje-alerta-warning {
	color: #85712e;
	background-color: #fff8de;
	border-color: #fff5d1;
}

.dje .dje-alerta-warning hr {
	border-top-color: #ffefb8;
}

.dje .dje-alerta-warning .alert-link {
	color: #5f5121;
}

.dje .dje-alerta-danger {
	color: #810404;
	background-color: #fecece;
	border-color: #fdbaba;
}

.dje .dje-alerta-danger hr {
	border-top-color: #fca1a1;
}

.dje .dje-alerta-danger .alert-link {
	color: #500202;
}

.dje .dje-alerta-light {
	color: #787b7d;
	background-color: #fafbfc;
	border-color: #f8fafb;
}

.dje .dje-alerta-light hr {
	border-top-color: #e8eef2;
}

.dje .dje-alerta-light .alert-link {
	color: #5f6163;
}

.dje .dje-alerta-dark {
	color: #161616;
	background-color: #d5d5d5;
	border-color: #c4c4c4;
}

.dje .dje-alerta-dark hr {
	border-top-color: #b7b7b7;
}

.dje .dje-alerta-dark .alert-link {
	color: black;
}

.dje .dje-alerta-azul {
	color: #0e192f;
	background-color: #d1d6de;
	border-color: #bfc5d1;
}

.dje .dje-alerta-azul hr {
	border-top-color: #b0b8c6;
}

.dje .dje-alerta-azul .alert-link {
	color: #020408;
}

.dje .dje-alerta-azul-claro {
	color: #253b68;
	background-color: #dae3f4;
	border-color: #cbd7ef;
}

.dje .dje-alerta-azul-claro hr {
	border-top-color: #b8c8e9;
}

.dje .dje-alerta-azul-claro .alert-link {
	color: #182642;
}

.dje .dje-alerta-secundary {
	color: #85712e;
	background-color: #fff8de;
	border-color: #fff5d1;
}

.dje .dje-alerta-secundary hr {
	border-top-color: #ffefb8;
}

.dje .dje-alerta-secundary .alert-link {
	color: #5f5121;
}

.dje .dje-alerta-verde {
	color: #256741;
	background-color: #daf4e5;
	border-color: #cbefdb;
}

.dje .dje-alerta-verde hr {
	border-top-color: #b8e9ce;
}

.dje .dje-alerta-verde .alert-link {
	color: #184129;
}

.dje .dje-alerta-vermelho {
	color: #810404;
	background-color: #fecece;
	border-color: #fdbaba;
}

.dje .dje-alerta-vermelho hr {
	border-top-color: #fca1a1;
}

.dje .dje-alerta-vermelho .alert-link {
	color: #500202;
}

.dje .dje-alerta-roxo {
	color: #4a4772;
	background-color: #e9e7f8;
	border-color: #e0def5;
}

.dje .dje-alerta-roxo hr {
	border-top-color: #cecaef;
}

.dje .dje-alerta-roxo .alert-link {
	color: #363353;
}

.dje .dje-alerta-amarelo {
	color: #85712e;
	background-color: #fff8de;
	border-color: #fff5d1;
}

.dje .dje-alerta-amarelo hr {
	border-top-color: #ffefb8;
}

.dje .dje-alerta-amarelo .alert-link {
	color: #5f5121;
}

.dje .dje-alerta-amarelo-escuro {
	color: #7e6200;
	background-color: #fcf2cc;
	border-color: #fbecb8;
}

.dje .dje-alerta-amarelo-escuro hr {
	border-top-color: #fae6a0;
}

.dje .dje-alerta-amarelo-escuro .alert-link {
	color: #4b3a00;
}

.dje .dje-alerta-cinza {
	color: #383838;
	background-color: #e1e1e1;
	border-color: #d6d6d6;
}

.dje .dje-alerta-cinza hr {
	border-top-color: #c9c9c9;
}

.dje .dje-alerta-cinza .alert-link {
	color: #1f1f1f;
}

.dje .dje-alerta-cinza-azulado {
	color: #787b7d;
	background-color: #fafbfc;
	border-color: #f8fafb;
}

.dje .dje-alerta-cinza-azulado hr {
	border-top-color: #e8eef2;
}

.dje .dje-alerta-cinza-azulado .alert-link {
	color: #5f6163;
}

.dje .dje-alerta-cinza-claro {
	color: #7a7a7a;
	background-color: #fbfbfb;
	border-color: #f9f9f9;
}

.dje .dje-alerta-cinza-claro hr {
	border-top-color: #ececec;
}

.dje .dje-alerta-cinza-claro .alert-link {
	color: #616161;
}

.dje .dje-alerta-branco {
	color: #858585;
	background-color: white;
	border-color: white;
}

.dje .dje-alerta-branco hr {
	border-top-color: #f2f2f2;
}

.dje .dje-alerta-branco .alert-link {
	color: #6c6c6c;
}

.dje .dje-alerta-instagram {
	color: #772131;
	background-color: #fad9df;
	border-color: #f7cad2;
}

.dje .dje-alerta-instagram hr {
	border-top-color: #f4b4bf;
}

.dje .dje-alerta-instagram .alert-link {
	color: #4f1621;
}

.dje .dje-alerta-youtube {
	color: #6b1110;
	background-color: #f5d2d2;
	border-color: #f1c1c0;
}

.dje .dje-alerta-youtube hr {
	border-top-color: #ecacab;
}

.dje .dje-alerta-youtube .alert-link {
	color: #3f0a09;
}

.dje .dje-alerta-facebook {
	color: #1f2e50;
	background-color: #d8deeb;
	border-color: #c8d1e2;
}

.dje .dje-alerta-facebook hr {
	border-top-color: #b7c3d9;
}

.dje .dje-alerta-facebook .alert-link {
	color: #11192b;
}

.mais-conteudo span {
	display: none;
}

.leia-mais {
	border-radius: 1.25rem !important;
	display: block;
	margin-left: auto;
	margin-right: auto;
	margin-top: 6px;
	margin-bottom: 6px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
