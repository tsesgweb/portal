#content {
	font-size: inherit !important;
	line-height: inherit !important;
	/*.abas-personalizadas {
        li {
            line-height: inherit !important;
            a {
                color: $silver_chalice;
            }
            &.active a {
                border-color: transparent;
                color: $color_orient_approx;
            }
        }
        a:link {
            border: none !important;
        }
    }*/
}

#content li {
	display: list-item;
}

#content li.formTab a {
	line-height: 24px !important;
}

#content .marcador-quadrado {
	list-style-image: url(../imagens/marcador_quad.jpg);
	margin-bottom: 20px;
}

#content .visite-tambem-itens li a {
	color: #676767 !important;
}

#content #compartilhar-conteudo a {
	color: #ffffff !important;
}

#content div.documentByLine {
	clear: both;
	width: 100%;
	float: left;
}

#content #barra-verde a {
	text-decoration: none !important;
}

#content #barra-verde a:link {
	color: #ffffff !important;
	font-weight: normal;
}

#content #barra-verde a:hover {
	color: #000 !important;
}

#content .marcadorQuadrado li {
	list-style-image: url(../imagens/marcador_quad.jpg);
	margin-bottom: 20px;
}

#content .marcadorTicado li {
	list-style-image: url(../imagens/marcador_check.jpg);
	margin-bottom: 20px;
}

#content-core dt {
	margin: 10px 0;
}

#content-core li.formTab a {
	line-height: 24px !important;
}

#edit-bar {
	font-size: inherit !important;
}

#edit-bar .actionMenuContent li {
	line-height: 2em;
}

.grupo-lista {
	list-style-type: none !important;
	margin-left: 10px !important;
}

span.compartilhar_facebook {
	cursor: pointer;
	color: #ffffff;
}

span.compartilhar-google-plus {
	cursor: pointer;
	color: #ffffff;
}

.formPanel .label {
	border-radius: inherit;
	color: inherit;
	display: inherit;
	font-size: inherit;
	font-weight: bold;
	line-height: inherit;
	padding: inherit;
	text-align: inherit;
	vertical-align: inherit;
	white-space: inherit;
}

.formPanel label {
	display: inline;
}

#atrbResults {
	font-size: inherit !important;
}

div.attention {
	font-size: inherit;
}

div.caution {
	font-size: inherit;
}

div.danger {
	font-size: inherit;
}

div.error {
	font-size: inherit;
}

div.hint {
	font-size: inherit;
}

div.important {
	font-size: inherit;
}

div.note {
	font-size: inherit;
}

div.tip {
	font-size: inherit;
}

div.warning {
	font-size: inherit;
}

div#paginacao-da-pagina.listingBar {
	font-size: inherit;
}

.links-topo #portal-personaltools {
	background: inherit;
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	float: inherit;
	font-size: inherit;
	padding: inherit;
	position: inherit;
	right: inherit;
	top: inherit;
	z-index: inherit;
}

.links-topo #portal-personaltools dd {
	background: #678867;
}

.links-topo #portal-personaltools dd a:hover {
	background: #176573;
}

.links-topo #portal-personaltools #anon-personalbar a {
	float: inherit;
}

.links-topo dl.actionMenu.activated dd {
	min-width: inherit;
	z-index: 3;
}

.template-radio_view .lista-resultados .lr-container {
	padding: 0;
}

.template-radio_view .lista-resultados .lr-data {
	margin-top: 5px;
}

.template-radio_view #content fieldset {
	border: none;
}

#texto-portlet {
	margin-bottom: 25px;
}

#texto-portlet .tabela-cont-impr {
	display: table;
	float: left;
	margin-bottom: 20px;
	min-height: 1px;
	padding-left: 0;
	padding-right: 0;
	position: relative;
	width: 100%;
}

#texto-portlet .tabela-cont-impr .ci-linha span {
	display: table-cell;
	float: left;
	min-height: 1px;
	padding: 2px 5px;
	position: relative;
	vertical-align: top;
	width: 50%;
}

@media (min-width: 768px) {
	#texto-portlet .tabela-cont-impr {
		float: left;
		width: 100%;
	}
	#texto-portlet .tabela-cont-impr .ci-linha span {
		float: left;
		width: 50%;
	}
	.section-imprensa #conteudo-pagina {
		padding-right: 0;
	}
}

#midia-facebook-noticias {
	padding-top: 20px;
}

#midia-twitter-noticias {
	padding-top: 20px;
}

#midia-flickr-noticias .link-integra {
	padding-top: 0;
}

#midia-flickr-noticias figure {
	text-align: center;
}

#midia-flickr-noticias .img-responsive {
	display: inline;
}

#midia-instagram-noticias .link-integra {
	padding-top: 0;
}

#midia-instagram-noticias figure {
	text-align: center;
}

#midia-instagram-noticias .img-responsive {
	display: inline;
}

.img-hover-midia-audio {
	background: #ffffff;
}

.img-hover-midia-audio .has-audio i::before {
	top: 22%;
}

.img-hover-galeria-relacionada {
	position: relative;
}

.img-hover-galeria-relacionada .fa-1x {
	font-size: 0.7em;
}

.img-hover-galeria-relacionada .fa-2x {
	font-size: 1em;
}

.item-portlet-midias {
	position: relative;
}

.img-hover-midia {
	position: relative;
}

.img-hover-midia img {
	margin: 0 auto !important;
	max-height: 261px;
}

.nc-imagem-midia {
	position: relative;
}

.nc-imagem-midia img {
	margin: 0 auto !important;
	max-height: 131px !important;
}

.nc-imagem-midia .img-responsive {
	display: inherit;
}

.img-hover-galeria-relacionada-audio {
	background-color: #ffffff !important;
}

.img-hover-galeria-relacionada-audio .has-audio {
	min-height: inherit;
}

.img-hover-galeria-relacionada-audio img {
	margin: 0 auto !important;
	max-height: 95px !important;
}

.nc-imagem-midia-audio {
	background-color: #ffffff !important;
}

#barra-verde {
	width: 100%;
}

#barra-verde p {
	margin-bottom: 0;
}

#barra-verde #contentActionMenus {
	z-index: 501;
}

#barra-verde #content-views a {
	color: #ffffff;
}

#barra-verde #content-views .selected a {
	color: #000 !important;
}

#barra-verde li {
	display: inline !important;
}

.noticias-home .je-icone::before {
	left: 30%;
	transform: translate(50%, -50%);
}

.noticias-home .je-icone::after {
	left: 0;
	transform: translate(0, -50%);
}

#home-servicos input.error {
	border-color: currentcolor currentcolor red !important;
}

#home-servicos label.error {
	font-size: 0.55em;
	display: none !important;
}

#form-consulta-situacao-eleitoral input {
	text-transform: uppercase;
}

#form-consulta-situacao-eleitoral input::placeholder {
	text-transform: none;
}

#form-consultar-local-votacao input {
	text-transform: uppercase;
}

#form-consultar-local-votacao input::placeholder {
	text-transform: none;
}

#form-consulta-quitacao-eleitoral input {
	text-transform: uppercase;
}

#form-consulta-quitacao-eleitoral input::placeholder {
	text-transform: none;
}

.btn-link {
	color: #1b305a;
}

#topo {
	color: #f0f0f0 !important;
}

#topo a {
	color: #f0f0f0 !important;
}

#je-foto-image {
	width: 60%;
	margin: 0 auto;
}

.galeria-content .media-left {
	padding-right: unset;
}

.galeria-content.galeria-quadro .bloco-galeria .media figure img {
	max-height: 120px;
	margin: auto;
}

.template-midia .img-responsive {
	display: inline;
}

.template-midia iframe {
	width: 500px;
}

#order-search {
	width: 100%;
	margin-top: 10px;
	float: left;
	text-align: right;
}

#order-search input {
	display: none;
}

#order-search .checkbox-inline {
	margin-left: 0;
	padding-left: 0;
}

#order-search label.order-active {
	font-weight: bold;
}

#form-pesquisa-pag label#start_date-error {
	display: none !important;
}

#form-pesquisa-pag label#end_date-error {
	display: none !important;
}

#form-pesquisa-pag input.error {
	border: 1px solid red !important;
}

.divider {
	display: block;
}

.bt-detalhar {
	width: auto !important;
}

.menu-login {
	clear: both;
}

.paginacao-noticias {
	margin-left: -30% !important;
}

.paginacao-noticias li {
	display: inline-block !important;
}

.je-icone::before {
	left: 50% !important;
	transform: translate(-50%, -50%) !important;
}

#texto-conteudo .icone-lista li:before {
	list-style: none;
}

#texto-conteudo .icone-lista li:not(.divider) {
	list-style: none;
}

#texto-conteudo .icone-lista p:before {
	list-style: none;
}

#texto-conteudo .icone-lista .bt-mais-acessados:before {
	list-style: none;
}

.template-folder_summary_view #parent-fieldname-description {
	padding-top: 20px;
	padding-bottom: 20px;
	font-size: 2.1em;
}

.template-folder_summary_view #viewlet-below-content-title {
	padding-top: 20px;
	padding-bottom: 20px;
}

.template-folder_summary_view #conteudo-pagina h2 {
	font-size: 1.5em;
}

.mceFirst #ancora_um_image {
	display: none;
}

.mceFirst #ancora_um_media {
	display: none;
}

.mceFirst #ancora_dois_image {
	display: none;
}

.mceFirst #ancora_dois_media {
	display: none;
}

.mceFirst #ancora_tres_image {
	display: none;
}

.mceFirst #ancora_tres_media {
	display: none;
}

.mceFirst #ancora_quatro_image {
	display: none;
}

.mceFirst #ancora_quatro_media {
	display: none;
}

.mceFirst #texto_complementar_image {
	display: none;
}

.mceFirst #texto_complementar_media {
	display: none;
}

.mceFirst #galeria_texto_image {
	display: none;
}

.mceFirst #galeria_texto_media {
	display: none;
}

.mceFirst #midia_texto_image {
	display: none;
}

.mceFirst #midia_texto_media {
	display: none;
}

.mceFirst #tab_texto_image {
	display: none;
}

.mceFirst #tab_texto_media {
	display: none;
}

.mceFirst #textoCodigo_image {
	display: none;
}

.mceFirst #textoCodigo_media {
	display: none;
}

.mceFirst #conteudo_image {
	display: none;
}

.mceFirst #conteudo_media {
	display: none;
}

.mceFirst #before_text_form_image {
	display: none;
}

.mceFirst #before_text_form_media {
	display: none;
}

.mceFirst #after_text_form_image {
	display: none;
}

.mceFirst #after_text_form_media {
	display: none;
}

.mceFirst #before_text_send_mail_image {
	display: none;
}

.mceFirst #before_text_send_mail_media {
	display: none;
}

.mceFirst #after_text_send_mail_image {
	display: none;
}

.mceFirst #after_text_send_mail_media {
	display: none;
}

.mceFirst #before_text_send_mail_confirm_image {
	display: none;
}

.mceFirst #before_text_send_mail_confirm_media {
	display: none;
}

.mceFirst #after_text_send_mail_confirm_image {
	display: none;
}

.mceFirst #after_text_send_mail_confirm_media {
	display: none;
}

@media screen and (max-width: 768px) {
	input {
		font-size: 1.6rem !important;
	}
	textarea {
		font-size: 1.6rem !important;
	}
	#servicos-mais-acessados {
		font-size: 1.6rem !important;
	}
	form * {
		font-size: 1.6rem;
	}
}

.mceContentBody {
	background: transparent;
}

.mceContentBody a {
	color: #436976 !important;
	background-color: transparent;
	text-decoration: none !important;
	border-bottom: 1px #cccccc solid !important;
}

.mceItemTable {
	border: 1px dashed #bbb;
}

.mceItemTable td {
	border: 1px dashed #bbb;
}

.mceItemTable th {
	border: 1px dashed #bbb;
}

.mceItemTable caption {
	border: 1px dashed #bbb;
}

.mceItemVisualAid {
	border: 1px dashed #bbb;
}

table {
	cursor: default;
	font-size: 100%;
}

table td {
	cursor: text;
}

table th {
	cursor: text;
}

ins {
	border-bottom: 1px solid green;
	text-decoration: none;
	color: green;
}

del {
	color: red;
	text-decoration: line-through;
}

cite {
	border-bottom: 1px dashed blue;
}

acronym {
	border-bottom: 1px dotted #cccccc;
	cursor: help;
}

abbr {
	border-bottom: 1px dashed #cccccc;
	cursor: help;
}

.mais-acessados-item .icone-lista li:before {
	margin-left: -18px;
}

.mais-acessados-item .icone-lista li:not(.divider) {
	margin-left: -18px;
}

.mais-acessados-item .icone-lista p:before {
	margin-left: -18px;
}

.mais-acessados-item .icone-lista .bt-mais-acessados:before {
	margin-left: -18px;
}

.mais-acessados-item li {
	margin-left: 18px !important;
}

.destaques-itens .icone-lista li:before {
	margin-left: -18px;
}

.destaques-itens .icone-lista li:not(.divider) {
	margin-left: -18px;
}

.destaques-itens .icone-lista p:before {
	margin-left: -18px;
}

.destaques-itens .icone-lista .bt-mais-acessados:before {
	margin-left: -18px;
}

.destaques-itens li {
	margin-left: 18px !important;
}

#content-views a {
	line-height: 24px !important;
}

/*.abas-personalizadas li {
    display: inline-table !important;
    margin-bottom: -1px !important;
}*/
.visite-tambem-itens li {
	margin-bottom: 10px !important;
}

#breadcrumb .breadcrumb > li {
	display: inline;
}

#archetypes-fieldname-breadcrumb input#breadcrumb {
	width: auto !important;
	color: inherit !important;
}

dl.portalMessage {
	font-size: inherit;
}

.coluna-mapa li {
	display: inherit !important;
}

.mapa-site-conteudo a {
	color: #777 !important;
}

#paginacao-da-pagina .pagination > li {
	display: inline;
}

#paginacao-da-pagina .pagination li a.pagina-anterior {
	color: #ffffff !important;
}

#paginacao-da-pagina .pagination li a.proxima-pagina {
	color: #ffffff !important;
}

#paginacao-da-pagina .pagination li.disabled a {
	background-color: #f0f0f0 !important;
	color: #999 !important;
}

#formfield-form-widgets-current_allow .label {
	color: inherit;
	font-size: inherit;
}

#formfield-form-widgets-current_prefer .label {
	color: inherit;
	font-size: inherit;
}

#listing-table a.state-published {
	color: #436976 !important;
}

#listing-table a.state-private {
	color: Red !important;
}

.historyTools li {
	list-style-type: none;
}

.template-paginanoticia div#compartilhar-conteudo.noticia-compartilhar div#compartilhar-conteudo {
	width: 50%;
}

.template-paginaremota div#compartilhar-conteudo.noticia-compartilhar div#compartilhar-conteudo {
	width: 50%;
}

.template-busca #content fieldset {
	border: none;
}

.template-paginainicial #content {
	margin: inherit;
}

.template-paginainicial #content fieldset {
	border: none;
}

.template-paginainicial #content ul {
	list-style-type: none;
	margin-left: inherit;
}

.template-gsasearch #content fieldset {
	border: none;
}

.template-reportagens-especiais #content fieldset {
	border: none;
}

.template-arquivo-noticias #content fieldset {
	border: none;
}

.template-coberturas-especiais #content fieldset {
	border: none;
}

.template-artigos-discursos #content fieldset {
	border: none;
}

.portaltype-destaqueshome #content fieldset {
	border: none;
}

#noticias a:link {
	border-bottom: none !important;
}

#youtube-carousel .carousel-indicators {
	bottom: 0;
	position: inherit;
}

#youtube-carousel .carousel-indicators li {
	padding-top: 0;
	border: 1px solid #c5c5c5;
}

#youtube-carousel .carousel-indicators .active {
	background-color: #c5c5c5;
}

#flickr-carousel .carousel-indicators {
	bottom: 0;
	position: inherit;
}

#flickr-carousel .carousel-indicators li {
	padding-top: 0;
	border: 1px solid #c5c5c5;
}

#flickr-carousel .carousel-indicators .active {
	background-color: #c5c5c5;
}

#instagram-carousel .carousel-indicators {
	bottom: 0;
	position: inherit;
}

#instagram-carousel .carousel-indicators li {
	padding-top: 0;
	border: 1px solid #c5c5c5;
}

#instagram-carousel .carousel-indicators .active {
	background-color: #c5c5c5;
}

#midia-youtube-noticias .link-integra {
	padding-top: 0;
}

.section-imprensa #conteudo-pagina {
	padding-right: 1em;
}

#noticia-1 img {
	margin: 0 auto !important;
}

.servico-eleitor .local-votacao-home .input-group-addon {
	background-color: transparent;
	border-color: currentcolor currentcolor #9e9c9c;
	border-image: none;
	border-style: none none solid;
	border-width: medium medium 1px;
	color: #9e9c9c;
}

#home-noticias .veja-mais a {
	color: #676767 !important;
}

.portaltype-jevideo iframe {
	width: 500px;
}

.noticia-mais-relacionado .noticia-mais-full {
	width: 100% !important;
}

#lista-noticias .lr-imagem-destaque .has-audio {
	min-height: inherit;
	min-width: inherit;
}

.lista-resultados .lr-container .lr-descricao {
	display: block;
}

.portletStaticText ul {
	list-style-type: inherit;
	margin-left: inherit;
}

.ArchetypesField-ReferenceField ul li {
	margin: 10px 0;
}

/*#seu-feedback .abas-personalizadas li.active a.marcar-texto-feed {
    color: $branco;
}*/
#tituloInterno h2 {
	font-size: 3.6rem;
}

.portaltype-destaquehome .mceFirst #ancora_um_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_um_media {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_dois_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_dois_media {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_tres_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_tres_media {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_quatro_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_quatro_media {
	display: block;
}

body.mceForceColors {
	background: #ffffff;
	color: #000;
}

a.mceItemAnchor {
	width: 12px;
	line-height: 6px;
	overflow: hidden;
	padding-left: 12px;
	background: url(img/items.gif) no-repeat bottom left;
}

img.mceItemAnchor {
	width: 12px;
	height: 12px;
	background: url(img/items.gif) no-repeat;
}

html\:abbr {
	border-bottom: 1px dashed #cccccc;
	cursor: help;
}

p span.italico {
	font-style: italic;
}

p span.bold {
	font-weight: bold;
}

ol.lista-alfabetica li {
	list-style-type: lower-latin;
}

#servicos-mais-acessados .bt-mais-acessados {
	margin: -20px 0 0 28px !important;
}

#midias-noticias-2 .carousel-aside-pause {
	display: none;
}

#validate-error .error {
	background-color: #fdc;
	border: 1px solid red;
	padding: 0.5em;
	margin: 1em 0;
	width: 100%;
}

#validate-error .requiredCaptcha {
	border: 2px solid red;
	width: 306px;
}

.carousel-aside-pause {
	display: none;
}

.tab-pane.active {
	display: block;
}

.tab-pane:focus {
	outline: none;
}

.data-time-icon {
	color: #ffffff;
	background: #1b305a;
}

.data-time-icon .gj-icon.clock {
	top: 8px;
}

#content {
	font-size: inherit;
}

#content fieldset {
	border: none !important;
}

.modal-header {
	display: inherit !important;
}

#texto-conteudo table.listing a,
#texto-conteudo table.listing p a,
#texto-conteudo table.listing > a {
	font-size: inherit !important;
}

#texto-conteudo iframe {
	min-width: 100%;
}

#texto-conteudo .tab-pane ol li {
	list-style: decimal;
	display: list-item;
}

#texto-conteudo .tab-pane ul li {
	display: list-item;
}

#texto-conteudo {
	font-size: 1.125rem;
}

#texto-conteudo li.marcador-quadrado,
#texto-conteudo ul.marcadorQuadrado li {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	display: block;
	font-size: .8em;
}

#texto-conteudo li.marcador-quadrado a,
#texto-conteudo ul.marcadorQuadrado li a {
	color: #1b305a;
	text-decoration: none;
}

#texto-conteudo li.marcador-quadrado a:hover,
#texto-conteudo ul.marcadorQuadrado li a:hover {
	color: #4671c8;
}

#texto-conteudo li.marcador-quadrado::before,
#texto-conteudo ul.marcadorQuadrado li::before {
	content: url("../imagens/marcador_quad.jpg");
	width: 11px;
	height: 11px;
	padding-right: 5px;
	margin-bottom: 15px;
}

#texto-conteudo li.marcador-ticado,
#texto-conteudo ul.marcadorTicado li {
	font-weight: 400;
	font-family: 'Open Sans', sans-serif;
	font-size: 1.125rem;
	line-height: 1.625rem;
	color: #6b6b6b;
	display: block;
	font-size: .8em;
}

#texto-conteudo li.marcador-ticado a,
#texto-conteudo ul.marcadorTicado li a {
	color: #1b305a;
	text-decoration: none;
}

#texto-conteudo li.marcador-ticado a:hover,
#texto-conteudo ul.marcadorTicado li a:hover {
	color: #4671c8;
}

#texto-conteudo li.marcador-ticado::before,
#texto-conteudo ul.marcadorTicado li::before {
	content: url("../imagens/marcador_check.jpg");
	width: 11px;
	height: 11px;
	padding-right: 5px;
	margin-bottom: 15px;
}

#barra-verde {
	max-width: 100%;
	position: absolute;
	z-index: 1;
}

#edit-bar {
	display: block;
	font-size: inherit;
	margin: 0 auto;
	max-width: 1140px;
	position: relative;
	min-height: 31px;
	border-right: none;
	border-top: none;
	padding-top: 5px;
}

.contentViews {
	margin-bottom: 0 !important;
}

#contentActionMenus {
	border-radius: 0;
	right: 0;
	top: 0px;
	padding: 0;
}

#contentActionMenus dl.actionMenu.activated dd {
	right: 0;
}

#texto-conteudo p span.italico {
	font-style: italic;
}

#texto-conteudo p span.bold {
	font-weight: bold;
}

#texto-conteudo ol.lista-alfabetica li {
	list-style-type: lower-latin;
}

.portaltype-jevideo iframe {
	width: 500px;
}

.noticia-mais-relacionado .noticia-mais-full {
	width: 100% !important;
}

#lista-noticias .lr-imagem-destaque .has-audio {
	min-height: inherit;
	min-width: inherit;
}

.lista-resultados .lr-container .lr-descricao {
	display: block;
}

.portletStaticText ul {
	list-style-type: inherit;
	margin-left: inherit;
}

.ArchetypesField-ReferenceField ul li {
	margin: 10px 0;
}

#tituloInterno h2 {
	font-size: 3.6rem;
}

.portaltype-destaquehome .mceFirst #ancora_um_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_um_media {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_dois_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_dois_media {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_tres_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_tres_media {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_quatro_image {
	display: block;
}

.portaltype-destaquehome .mceFirst #ancora_quatro_media {
	display: block;
}

body.mceForceColors {
	background: #ffffff;
	color: #000;
}

a.mceItemAnchor {
	width: 12px;
	line-height: 6px;
	overflow: hidden;
	padding-left: 12px;
	background: url(img/items.gif) no-repeat bottom left;
}

img.mceItemAnchor {
	width: 12px;
	height: 12px;
	background: url(img/items.gif) no-repeat;
}

html\:abbr {
	border-bottom: 1px dashed #cccccc;
	cursor: help;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
